{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AuthKey = void 0;\nconst Helpers_1 = require(\"../Helpers\");\nconst extensions_1 = require(\"../extensions\");\nconst Helpers_2 = require(\"../Helpers\");\nclass AuthKey {\n  constructor(value, hash) {\n    if (!hash || !value) {\n      return;\n    }\n    this._key = value;\n    this._hash = hash;\n    const reader = new extensions_1.BinaryReader(hash);\n    this.auxHash = reader.readLong(false);\n    reader.read(4);\n    this.keyId = reader.readLong(false);\n  }\n  async setKey(value) {\n    if (!value) {\n      this._key = this.auxHash = this.keyId = this._hash = undefined;\n      return;\n    }\n    if (value instanceof AuthKey) {\n      this._key = value._key;\n      this.auxHash = value.auxHash;\n      this.keyId = value.keyId;\n      this._hash = value._hash;\n      return;\n    }\n    this._key = value;\n    this._hash = await (0, Helpers_1.sha1)(this._key);\n    const reader = new extensions_1.BinaryReader(this._hash);\n    this.auxHash = reader.readLong(false);\n    reader.read(4);\n    this.keyId = reader.readLong(false);\n  }\n  async waitForKey() {\n    while (!this.keyId) {\n      await (0, Helpers_2.sleep)(20);\n    }\n  }\n  getKey() {\n    return this._key;\n  }\n  // TODO : This doesn't really fit here, it's only used in authentication\n  /**\n   * Calculates the new nonce hash based on the current class fields' values\n   * @param newNonce\n   * @param number\n   * @returns {bigInt.BigInteger}\n   */\n  async calcNewNonceHash(newNonce, number) {\n    if (this.auxHash) {\n      const nonce = (0, Helpers_1.toSignedLittleBuffer)(newNonce, 32);\n      const n = Buffer.alloc(1);\n      n.writeUInt8(number, 0);\n      const data = Buffer.concat([nonce, Buffer.concat([n, (0, Helpers_1.readBufferFromBigInt)(this.auxHash, 8, true)])]);\n      // Calculates the message key from the given data\n      const shaData = (await (0, Helpers_1.sha1)(data)).slice(4, 20);\n      return (0, Helpers_1.readBigIntFromBuffer)(shaData, true, true);\n    }\n    throw new Error(\"Auth key not set\");\n  }\n  equals(other) {\n    var _a;\n    return other instanceof this.constructor && this._key && Buffer.isBuffer(other.getKey()) && ((_a = other.getKey()) === null || _a === void 0 ? void 0 : _a.equals(this._key));\n  }\n}\nexports.AuthKey = AuthKey;","map":{"version":3,"names":["Object","defineProperty","exports","value","AuthKey","Helpers_1","require","extensions_1","Helpers_2","constructor","hash","_key","_hash","reader","BinaryReader","auxHash","readLong","read","keyId","setKey","undefined","sha1","waitForKey","sleep","getKey","calcNewNonceHash","newNonce","number","nonce","toSignedLittleBuffer","n","Buffer","alloc","writeUInt8","data","concat","readBufferFromBigInt","shaData","slice","readBigIntFromBuffer","Error","equals","other","_a","isBuffer"],"sources":["C:/Users/Rodrick/Documents/telegram-media-downloader/node_modules/telegram/crypto/AuthKey.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AuthKey = void 0;\nconst Helpers_1 = require(\"../Helpers\");\nconst extensions_1 = require(\"../extensions\");\nconst Helpers_2 = require(\"../Helpers\");\nclass AuthKey {\n    constructor(value, hash) {\n        if (!hash || !value) {\n            return;\n        }\n        this._key = value;\n        this._hash = hash;\n        const reader = new extensions_1.BinaryReader(hash);\n        this.auxHash = reader.readLong(false);\n        reader.read(4);\n        this.keyId = reader.readLong(false);\n    }\n    async setKey(value) {\n        if (!value) {\n            this._key = this.auxHash = this.keyId = this._hash = undefined;\n            return;\n        }\n        if (value instanceof AuthKey) {\n            this._key = value._key;\n            this.auxHash = value.auxHash;\n            this.keyId = value.keyId;\n            this._hash = value._hash;\n            return;\n        }\n        this._key = value;\n        this._hash = await (0, Helpers_1.sha1)(this._key);\n        const reader = new extensions_1.BinaryReader(this._hash);\n        this.auxHash = reader.readLong(false);\n        reader.read(4);\n        this.keyId = reader.readLong(false);\n    }\n    async waitForKey() {\n        while (!this.keyId) {\n            await (0, Helpers_2.sleep)(20);\n        }\n    }\n    getKey() {\n        return this._key;\n    }\n    // TODO : This doesn't really fit here, it's only used in authentication\n    /**\n     * Calculates the new nonce hash based on the current class fields' values\n     * @param newNonce\n     * @param number\n     * @returns {bigInt.BigInteger}\n     */\n    async calcNewNonceHash(newNonce, number) {\n        if (this.auxHash) {\n            const nonce = (0, Helpers_1.toSignedLittleBuffer)(newNonce, 32);\n            const n = Buffer.alloc(1);\n            n.writeUInt8(number, 0);\n            const data = Buffer.concat([\n                nonce,\n                Buffer.concat([n, (0, Helpers_1.readBufferFromBigInt)(this.auxHash, 8, true)]),\n            ]);\n            // Calculates the message key from the given data\n            const shaData = (await (0, Helpers_1.sha1)(data)).slice(4, 20);\n            return (0, Helpers_1.readBigIntFromBuffer)(shaData, true, true);\n        }\n        throw new Error(\"Auth key not set\");\n    }\n    equals(other) {\n        var _a;\n        return (other instanceof this.constructor &&\n            this._key &&\n            Buffer.isBuffer(other.getKey()) &&\n            ((_a = other.getKey()) === null || _a === void 0 ? void 0 : _a.equals(this._key)));\n    }\n}\nexports.AuthKey = AuthKey;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}