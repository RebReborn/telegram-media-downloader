{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const verificationResolver = useRef(null);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n\n  // Connect to Telegram\n  const connect = async () => {\n    try {\n      // Validate inputs\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format (32 characters hexadecimal)');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format. Use +1234567890');\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3\n      });\n      await newClient.connect(); // Ensure connection before starting auth\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Authentication error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected successfully!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Connection error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n\n  // Verify the code\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({\n        text: 'Verifying...',\n        type: 'loading'\n      });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({\n        text: 'Verification failed. Try connecting again.',\n        type: 'error'\n      });\n    }\n  };\n\n  // Fetch media from Telegram chat\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({\n        text: 'Please connect and enter a chat ID/username',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setProgress(10);\n      setAuthStatus({\n        text: 'Fetching media...',\n        type: 'loading'\n      });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => {\n        let filename = 'unknown';\n        if (m.photo) {\n          filename = `photo_${m.id}.jpg`;\n        } else if (m.video) {\n          filename = `video_${m.id}.mp4`;\n        } else if (m.document) {\n          const fileAttr = m.document.attributes.find(attr => attr.className === 'DocumentAttributeFilename');\n          filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n        }\n        return {\n          id: m.id,\n          type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n          filename,\n          message: m\n        };\n      });\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({\n        text: `Found ${items.length} media items`,\n        type: 'success'\n      });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        text: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n\n  // Download media file\n  const downloadFile = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Downloading ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n      setProgress(0);\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          const percentage = Math.round(received / total * 100);\n          setProgress(percentage);\n        }\n      });\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      setAuthStatus({\n        text: `${mediaItem.filename} downloaded successfully!`,\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  // Disconnect from Telegram\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API ID (from my.telegram.org)\",\n          value: apiId,\n          onChange: e => setApiId(e.target.value.trim()),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API Hash\",\n          value: apiHash,\n          onChange: e => setApiHash(e.target.value.trim()),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Phone (+1234567890)\",\n          value: phone,\n          onChange: e => setPhone(e.target.value.trim()),\n          type: \"tel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          disabled: isWaitingForCode,\n          children: \"Connect to Telegram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 25\n        }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: disconnect,\n          className: \"disconnect-btn\",\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Verification Code\",\n            value: code,\n            onChange: e => setCode(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 29\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 21\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Chat ID or @username\",\n            value: chatInput,\n            onChange: e => setChatInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: \"Fetch Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: [item.type === 'photo' ? '📷' : item.type === 'video' ? '🎥' : '📄', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => downloadFile(item),\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: isDownloading ? 'Downloading...' : 'Download'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 25\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 29\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Get your API ID and Hash from my.telegram.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to the Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: \"Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zVBm1UwuP6D6XadT+pDzxIpzlng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","verificationResolver","current","disconnect","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","filename","photo","id","video","document","fileAttr","attributes","find","attr","className","fileName","length","setTimeout","downloadFile","mediaItem","buffer","downloadMedia","progressCallback","received","total","percentage","Math","round","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","removeItem","children","onClick","_jsxFileName","lineNumber","columnNumber","disabled","placeholder","value","onChange","e","target","item","style","width","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n    const [tab, setTab] = useState('auth');\n    const [apiId, setApiId] = useState('');\n    const [apiHash, setApiHash] = useState('');\n    const [phone, setPhone] = useState('');\n    const [code, setCode] = useState('');\n    const [client, setClient] = useState(null);\n    const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n    const [mediaItems, setMediaItems] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [chatInput, setChatInput] = useState('');\n    const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n    const [isDownloading, setIsDownloading] = useState(false);\n    const verificationResolver = useRef(null);\n\n    // Cleanup effect\n    useEffect(() => {\n        return () => {\n            verificationResolver.current = null;\n            if (client) {\n                client.disconnect();\n            }\n        };\n    }, [client]);\n\n    // Connect to Telegram\n    const connect = async () => {\n        try {\n            // Validate inputs\n            if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n            if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format (32 characters hexadecimal)');\n            const cleanPhone = phone.trim();\n            if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format. Use +1234567890');\n\n            setAuthStatus({ text: 'Connecting...', type: 'loading' });\n            setIsWaitingForCode(false);\n            setCode('');\n\n            const sessionKey = 'telegramSession';\n            const savedSession = localStorage.getItem(sessionKey) || '';\n            const newClient = new TelegramClient(\n                new StringSession(savedSession),\n                parseInt(apiId),\n                apiHash,\n                { connectionRetries: 3 }\n            );\n\n            await newClient.connect(); // Ensure connection before starting auth\n            await newClient.start({\n                phoneNumber: cleanPhone,\n                phoneCode: async () => {\n                    setAuthStatus({ text: 'Enter verification code sent to your phone', type: 'info' });\n                    setIsWaitingForCode(true);\n                    return new Promise((resolve) => {\n                        verificationResolver.current = resolve;\n                    });\n                },\n                onError: (err) => {\n                    setAuthStatus({ text: `Authentication error: ${err.message}`, type: 'error' });\n                    setIsWaitingForCode(false);\n                },\n            });\n\n            const session = newClient.session.save();\n            localStorage.setItem(sessionKey, session);\n            setClient(newClient);\n            setAuthStatus({ text: 'Connected successfully!', type: 'success' });\n            setTab('download');\n        } catch (err) {\n            setAuthStatus({ text: `Connection error: ${err.message}`, type: 'error' });\n            setIsWaitingForCode(false);\n        }\n    };\n\n    // Verify the code\n    const verifyCode = () => {\n        if (!code.trim()) {\n            setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n            return;\n        }\n        if (verificationResolver.current) {\n            setAuthStatus({ text: 'Verifying...', type: 'loading' });\n            verificationResolver.current(code);\n            verificationResolver.current = null;\n            setIsWaitingForCode(false);\n        } else {\n            setAuthStatus({ text: 'Verification failed. Try connecting again.', type: 'error' });\n        }\n    };\n\n    // Fetch media from Telegram chat\n    const fetchMedia = async () => {\n        if (!chatInput.trim() || !client) {\n            setAuthStatus({ text: 'Please connect and enter a chat ID/username', type: 'error' });\n            return;\n        }\n\n        try {\n            setProgress(10);\n            setAuthStatus({ text: 'Fetching media...', type: 'loading' });\n            const entity = await client.getInputEntity(chatInput.trim());\n            setProgress(50);\n            const messages = await client.getMessages(entity, { limit: 100 });\n            setProgress(80);\n\n            const items = messages\n                .filter((m) => m.media)\n                .map((m) => {\n                    let filename = 'unknown';\n                    if (m.photo) {\n                        filename = `photo_${m.id}.jpg`;\n                    } else if (m.video) {\n                        filename = `video_${m.id}.mp4`;\n                    } else if (m.document) {\n                        const fileAttr = m.document.attributes.find((attr) => attr.className === 'DocumentAttributeFilename');\n                        filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n                    }\n                    return {\n                        id: m.id,\n                        type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n                        filename,\n                        message: m,\n                    };\n                });\n\n            setMediaItems(items);\n            setProgress(100);\n            setAuthStatus({ text: `Found ${items.length} media items`, type: 'success' });\n            setTimeout(() => setProgress(0), 1000);\n        } catch (err) {\n            setAuthStatus({ text: `Fetch error: ${err.message}`, type: 'error' });\n            setProgress(0);\n        }\n    };\n\n    // Download media file\n    const downloadFile = async (mediaItem) => {\n        if (!client || !mediaItem.message.media) return;\n\n        try {\n            setIsDownloading(true);\n            setAuthStatus({ text: `Downloading ${mediaItem.filename}...`, type: 'loading' });\n            setProgress(0);\n\n            const buffer = await client.downloadMedia(mediaItem.message.media, {\n                progressCallback: (received, total) => {\n                    const percentage = Math.round((received / total) * 100);\n                    setProgress(percentage);\n                },\n            });\n\n            const blob = new Blob([buffer]);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = mediaItem.filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n            setAuthStatus({ text: `${mediaItem.filename} downloaded successfully!`, type: 'success' });\n        } catch (err) {\n            setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n        } finally {\n            setIsDownloading(false);\n            setProgress(0);\n        }\n    };\n\n    // Disconnect from Telegram\n    const disconnect = async () => {\n        if (client) {\n            await client.disconnect();\n        }\n        localStorage.removeItem('telegramSession');\n        setClient(null);\n        setTab('auth');\n        setAuthStatus({ text: 'Disconnected', type: 'info' });\n        setMediaItems([]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"tabs\">\n                <button\n                    onClick={() => setTab('auth')}\n                    className={`tab ${tab === 'auth' ? 'active' : ''}`}\n                >\n                    Authentication\n                </button>\n                <button\n                    onClick={() => setTab('download')}\n                    className={`tab ${tab === 'download' ? 'active' : ''}`}\n                    disabled={!client}\n                >\n                    Download Media\n                </button>\n                <button\n                    onClick={() => setTab('about')}\n                    className={`tab ${tab === 'about' ? 'active' : ''}`}\n                >\n                    About\n                </button>\n            </div>\n\n            <div className=\"tab-content\">\n                {tab === 'auth' && (\n                    <div className=\"auth-container\">\n                        <h2>Telegram Login</h2>\n                        <input\n                            placeholder=\"API ID (from my.telegram.org)\"\n                            value={apiId}\n                            onChange={(e) => setApiId(e.target.value.trim())}\n                            type=\"text\"\n                        />\n                        <input\n                            placeholder=\"API Hash\"\n                            value={apiHash}\n                            onChange={(e) => setApiHash(e.target.value.trim())}\n                            type=\"password\"\n                        />\n                        <input\n                            placeholder=\"Phone (+1234567890)\"\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value.trim())}\n                            type=\"tel\"\n                        />\n                        <button onClick={connect} className=\"connect-btn\" disabled={isWaitingForCode}>\n                            Connect to Telegram\n                        </button>\n                        {client && (\n                            <button onClick={disconnect} className=\"disconnect-btn\">\n                                Disconnect\n                            </button>\n                        )}\n                        {isWaitingForCode && (\n                            <div className=\"verification-box\">\n                                <input\n                                    placeholder=\"Verification Code\"\n                                    value={code}\n                                    onChange={(e) => setCode(e.target.value.trim())}\n                                    type=\"text\"\n                                />\n                                <button\n                                    onClick={verifyCode}\n                                    className=\"verify-btn\"\n                                    disabled={!code.trim()}\n                                >\n                                    Verify Code\n                                </button>\n                            </div>\n                        )}\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'download' && client && (\n                    <div className=\"download-container\">\n                        <h2>Download Media</h2>\n                        <div className=\"search-container\">\n                            <input\n                                placeholder=\"Chat ID or @username\"\n                                value={chatInput}\n                                onChange={(e) => setChatInput(e.target.value)}\n                                type=\"text\"\n                            />\n                            <button\n                                onClick={fetchMedia}\n                                className=\"fetch-btn\"\n                                disabled={progress > 0 && progress < 100}\n                            >\n                                Fetch Media\n                            </button>\n                        </div>\n                        <div className=\"media-grid\">\n                            {mediaItems.length > 0 ? (\n                                mediaItems.map((item) => (\n                                    <div key={item.id} className=\"media-item\">\n                                        <div className=\"media-preview\">\n                                            {item.type === 'photo' ? '📷' : item.type === 'video' ? '🎥' : '📄'}\n                                            <span className=\"filename\">{item.filename}</span>\n                                        </div>\n                                        <button\n                                            onClick={() => downloadFile(item)}\n                                            className=\"download-btn\"\n                                            disabled={isDownloading}\n                                        >\n                                            {isDownloading ? 'Downloading...' : 'Download'}\n                                        </button>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"empty-state\">\n                                    {progress > 0 && progress < 100\n                                        ? 'Loading media...'\n                                        : 'No media found. Enter a chat ID and click \"Fetch Media\"'}\n                                </div>\n                            )}\n                        </div>\n                        {progress > 0 && (\n                            <div className=\"progress-container\">\n                                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                                    {progress}%\n                                </div>\n                            </div>\n                        )}\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'about' && (\n                    <div className=\"about-container\">\n                        <h2>About This App</h2>\n                        <p>This application allows you to download media from Telegram chats.</p>\n                        <h3>How to use:</h3>\n                        <ol>\n                            <li>Get your API ID and Hash from my.telegram.org</li>\n                            <li>Enter your credentials in the Authentication tab</li>\n                            <li>After connecting, go to the Download Media tab</li>\n                            <li>Enter a chat ID or username to fetch media</li>\n                        </ol>\n                        <div className=\"disclaimer\">\n                            Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}