{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n  const connect = async () => {\n    try {\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3,\n        useWSS: true,\n        appVersion: '1.0.0',\n        deviceModel: 'Browser',\n        systemVersion: 'Web',\n        downloadWorkers: 4\n      });\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Authentication error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected successfully!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Connection error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({\n        text: 'Verifying...',\n        type: 'loading'\n      });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({\n        text: 'Verification failed. Try connecting again.',\n        type: 'error'\n      });\n    }\n  };\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({\n        text: 'Please connect and enter a chat ID/username',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setProgress(10);\n      setAuthStatus({\n        text: 'Fetching media...',\n        type: 'loading'\n      });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => {\n        var _m$media$document, _m$media$photo, _m$media$photo$sizes, _m$media$photo$sizes$;\n        let filename = 'unknown';\n        let fileType = 'file';\n        if (m.photo) {\n          filename = `photo_${m.id}.jpg`;\n          fileType = 'photo';\n        } else if (m.video) {\n          filename = `video_${m.id}.mp4`;\n          fileType = 'video';\n        } else if (m.document) {\n          var _m$document$attribute;\n          const fileAttr = (_m$document$attribute = m.document.attributes) === null || _m$document$attribute === void 0 ? void 0 : _m$document$attribute.find(attr => attr.className === 'DocumentAttributeFilename');\n          filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n          fileType = m.document.mimeType || 'file';\n        }\n        return {\n          id: m.id,\n          type: fileType,\n          filename,\n          message: m,\n          size: ((_m$media$document = m.media.document) === null || _m$media$document === void 0 ? void 0 : _m$media$document.size) || ((_m$media$photo = m.media.photo) === null || _m$media$photo === void 0 ? void 0 : (_m$media$photo$sizes = _m$media$photo.sizes) === null || _m$media$photo$sizes === void 0 ? void 0 : (_m$media$photo$sizes$ = _m$media$photo$sizes.slice(-1)[0]) === null || _m$media$photo$sizes$ === void 0 ? void 0 : _m$media$photo$sizes$.size) || 0,\n          date: new Date(m.date * 1000).toLocaleString()\n        };\n      });\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({\n        text: `Found ${items.length} media items`,\n        type: 'success'\n      });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        text: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n  const downloadFile = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Downloading ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n      setProgress(0);\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          setProgress(Math.round(received / total * 100));\n        }\n      });\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      URL.revokeObjectURL(url);\n      setAuthStatus({\n        text: `${mediaItem.filename} downloaded successfully!`,\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({\n        text: 'Please select files to download',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Downloading ${selectedItems.size} files...`,\n        type: 'loading'\n      });\n      let downloadedCount = 0;\n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) {\n          await downloadFile(item);\n          downloadedCount++;\n          setAuthStatus({\n            text: `Downloading ${downloadedCount}/${selectedItems.size} files...`,\n            type: 'loading'\n          });\n          await new Promise(resolve => setTimeout(resolve, 500)); // Delay between downloads\n        }\n      }\n      setAuthStatus({\n        text: `Downloaded ${selectedItems.size} files!`,\n        type: 'success'\n      });\n      setSelectedItems(new Set()); // Clear selection after download\n    } catch (err) {\n      setAuthStatus({\n        text: `Batch download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n  const toggleItemSelection = id => {\n    setSelectedItems(prev => {\n      const newSelected = new Set(prev);\n      if (newSelected.has(id)) {\n        newSelected.delete(id);\n      } else {\n        newSelected.add(id);\n      }\n      return newSelected;\n    });\n  };\n  const selectAllItems = () => {\n    setSelectedItems(prev => prev.size === mediaItems.length ? new Set() : new Set(mediaItems.map(item => item.id)));\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Telegram Media Downloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        className: \"disconnect-btn\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiId\",\n            children: \"API ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiId\",\n            placeholder: \"API ID (from my.telegram.org)\",\n            value: apiId,\n            onChange: e => setApiId(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiHash\",\n            children: \"API Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiHash\",\n            placeholder: \"API Hash\",\n            value: apiHash,\n            onChange: e => setApiHash(e.target.value.trim()),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone\",\n            placeholder: \"Phone (+1234567890)\",\n            value: phone,\n            onChange: e => setPhone(e.target.value.trim()),\n            type: \"tel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          disabled: isWaitingForCode,\n          children: isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 25\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"code\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"code\",\n              placeholder: \"Verification Code\",\n              value: code,\n              onChange: e => setCode(e.target.value.trim()),\n              type: \"text\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chatInput\",\n              children: \"Chat ID or @username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"chatInput\",\n              placeholder: \"Chat ID or @username\",\n              value: chatInput,\n              onChange: e => setChatInput(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 25\n        }, this), mediaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: selectAllItems,\n            className: \"select-all-btn\",\n            children: selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadSelected,\n            className: \"download-selected-btn\",\n            disabled: selectedItems.size === 0 || isDownloading,\n            children: [\"Download Selected (\", selectedItems.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `media-item ${selectedItems.has(item.id) ? 'selected' : ''}`,\n            onClick: () => toggleItemSelection(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                title: item.filename,\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: formatFileSize(item.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-date\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                downloadFile(item);\n              },\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: isDownloading ? 'Downloading...' : 'Download'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 25\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 29\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats directly to your browser's download folder.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Get your API ID and Hash from\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://my.telegram.org\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"my.telegram.org\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to the Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Files will download directly to your default download location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 29\n          }, this), \" This app runs entirely in your browser. Your credentials and downloads are not processed through any external server.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"version-info\",\n          children: \"Version 2.1 | Direct Browser Downloads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WMYvQULB+AOG/dxd55v9Z43nFK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","selectedItems","setSelectedItems","Set","verificationResolver","current","disconnect","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","useWSS","appVersion","deviceModel","systemVersion","downloadWorkers","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","_m$media$document","_m$media$photo","_m$media$photo$sizes","_m$media$photo$sizes$","filename","fileType","photo","id","video","document","_m$document$attribute","fileAttr","attributes","find","attr","className","fileName","mimeType","size","sizes","slice","date","Date","toLocaleString","length","setTimeout","downloadFile","mediaItem","buffer","downloadMedia","progressCallback","received","total","Math","round","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","downloadSelected","downloadedCount","item","toggleItemSelection","prev","newSelected","has","delete","add","selectAllItems","formatFileSize","bytes","k","i","floor","log","parseFloat","pow","toFixed","removeItem","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","placeholder","value","onChange","e","target","autoFocus","includes","title","stopPropagation","style","width","rel","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n    const [tab, setTab] = useState('auth');\n    const [apiId, setApiId] = useState('');\n    const [apiHash, setApiHash] = useState('');\n    const [phone, setPhone] = useState('');\n    const [code, setCode] = useState('');\n    const [client, setClient] = useState(null);\n    const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n    const [mediaItems, setMediaItems] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [chatInput, setChatInput] = useState('');\n    const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n    const [isDownloading, setIsDownloading] = useState(false);\n    const [selectedItems, setSelectedItems] = useState(new Set());\n    const verificationResolver = useRef(null);\n\n    // Cleanup effect\n    useEffect(() => {\n        return () => {\n            verificationResolver.current = null;\n            if (client) {\n                client.disconnect();\n            }\n        };\n    }, [client]);\n\n    const connect = async () => {\n        try {\n            if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n            if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n            const cleanPhone = phone.trim();\n            if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n\n            setAuthStatus({ text: 'Connecting...', type: 'loading' });\n            setIsWaitingForCode(false);\n            setCode('');\n\n            const sessionKey = 'telegramSession';\n            const savedSession = localStorage.getItem(sessionKey) || '';\n            const newClient = new TelegramClient(\n                new StringSession(savedSession),\n                parseInt(apiId),\n                apiHash,\n                {\n                    connectionRetries: 3,\n                    useWSS: true,\n                    appVersion: '1.0.0',\n                    deviceModel: 'Browser',\n                    systemVersion: 'Web',\n                    downloadWorkers: 4,\n                }\n            );\n\n            await newClient.connect();\n            await newClient.start({\n                phoneNumber: cleanPhone,\n                phoneCode: async () => {\n                    setAuthStatus({ text: 'Enter verification code sent to your phone', type: 'info' });\n                    setIsWaitingForCode(true);\n                    return new Promise((resolve) => {\n                        verificationResolver.current = resolve;\n                    });\n                },\n                onError: (err) => {\n                    setAuthStatus({ text: `Authentication error: ${err.message}`, type: 'error' });\n                    setIsWaitingForCode(false);\n                },\n            });\n\n            const session = newClient.session.save();\n            localStorage.setItem(sessionKey, session);\n            setClient(newClient);\n            setAuthStatus({ text: 'Connected successfully!', type: 'success' });\n            setTab('download');\n        } catch (err) {\n            setAuthStatus({ text: `Connection error: ${err.message}`, type: 'error' });\n            setIsWaitingForCode(false);\n        }\n    };\n\n    const verifyCode = () => {\n        if (!code.trim()) {\n            setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n            return;\n        }\n        if (verificationResolver.current) {\n            setAuthStatus({ text: 'Verifying...', type: 'loading' });\n            verificationResolver.current(code);\n            verificationResolver.current = null;\n            setIsWaitingForCode(false);\n        } else {\n            setAuthStatus({ text: 'Verification failed. Try connecting again.', type: 'error' });\n        }\n    };\n\n    const fetchMedia = async () => {\n        if (!chatInput.trim() || !client) {\n            setAuthStatus({ text: 'Please connect and enter a chat ID/username', type: 'error' });\n            return;\n        }\n\n        try {\n            setProgress(10);\n            setAuthStatus({ text: 'Fetching media...', type: 'loading' });\n            const entity = await client.getInputEntity(chatInput.trim());\n            setProgress(50);\n            const messages = await client.getMessages(entity, { limit: 100 });\n            setProgress(80);\n\n            const items = messages\n                .filter((m) => m.media)\n                .map((m) => {\n                    let filename = 'unknown';\n                    let fileType = 'file';\n                    if (m.photo) {\n                        filename = `photo_${m.id}.jpg`;\n                        fileType = 'photo';\n                    } else if (m.video) {\n                        filename = `video_${m.id}.mp4`;\n                        fileType = 'video';\n                    } else if (m.document) {\n                        const fileAttr = m.document.attributes?.find(\n                            (attr) => attr.className === 'DocumentAttributeFilename'\n                        );\n                        filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n                        fileType = m.document.mimeType || 'file';\n                    }\n                    return {\n                        id: m.id,\n                        type: fileType,\n                        filename,\n                        message: m,\n                        size: m.media.document?.size || m.media.photo?.sizes?.slice(-1)[0]?.size || 0,\n                        date: new Date(m.date * 1000).toLocaleString(),\n                    };\n                });\n\n            setMediaItems(items);\n            setProgress(100);\n            setAuthStatus({ text: `Found ${items.length} media items`, type: 'success' });\n            setTimeout(() => setProgress(0), 1000);\n        } catch (err) {\n            setAuthStatus({ text: `Fetch error: ${err.message}`, type: 'error' });\n            setProgress(0);\n        }\n    };\n\n    const downloadFile = async (mediaItem) => {\n        if (!client || !mediaItem.message.media) return;\n\n        try {\n            setIsDownloading(true);\n            setAuthStatus({ text: `Downloading ${mediaItem.filename}...`, type: 'loading' });\n            setProgress(0);\n\n            const buffer = await client.downloadMedia(mediaItem.message.media, {\n                progressCallback: (received, total) => {\n                    setProgress(Math.round((received / total) * 100));\n                },\n            });\n\n            const blob = new Blob([buffer]);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = mediaItem.filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n\n            setAuthStatus({ text: `${mediaItem.filename} downloaded successfully!`, type: 'success' });\n        } catch (err) {\n            setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n        } finally {\n            setIsDownloading(false);\n            setProgress(0);\n        }\n    };\n\n    const downloadSelected = async () => {\n        if (selectedItems.size === 0) {\n            setAuthStatus({ text: 'Please select files to download', type: 'error' });\n            return;\n        }\n\n        try {\n            setIsDownloading(true);\n            setAuthStatus({ text: `Downloading ${selectedItems.size} files...`, type: 'loading' });\n            let downloadedCount = 0;\n\n            for (const id of selectedItems) {\n                const item = mediaItems.find((m) => m.id === id);\n                if (item) {\n                    await downloadFile(item);\n                    downloadedCount++;\n                    setAuthStatus({\n                        text: `Downloading ${downloadedCount}/${selectedItems.size} files...`,\n                        type: 'loading',\n                    });\n                    await new Promise((resolve) => setTimeout(resolve, 500)); // Delay between downloads\n                }\n            }\n\n            setAuthStatus({ text: `Downloaded ${selectedItems.size} files!`, type: 'success' });\n            setSelectedItems(new Set()); // Clear selection after download\n        } catch (err) {\n            setAuthStatus({ text: `Batch download failed: ${err.message}`, type: 'error' });\n        } finally {\n            setIsDownloading(false);\n            setProgress(0);\n        }\n    };\n\n    const toggleItemSelection = (id) => {\n        setSelectedItems((prev) => {\n            const newSelected = new Set(prev);\n            if (newSelected.has(id)) {\n                newSelected.delete(id);\n            } else {\n                newSelected.add(id);\n            }\n            return newSelected;\n        });\n    };\n\n    const selectAllItems = () => {\n        setSelectedItems((prev) =>\n            prev.size === mediaItems.length ? new Set() : new Set(mediaItems.map((item) => item.id))\n        );\n    };\n\n    const formatFileSize = (bytes) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n    };\n\n    const disconnect = async () => {\n        if (client) {\n            await client.disconnect();\n        }\n        localStorage.removeItem('telegramSession');\n        setClient(null);\n        setTab('auth');\n        setAuthStatus({ text: 'Disconnected', type: 'info' });\n        setMediaItems([]);\n        setSelectedItems(new Set());\n    };\n\n    return (\n        <div className=\"App\">\n            <header className=\"app-header\">\n                <h1>Telegram Media Downloader</h1>\n                {client && (\n                    <button onClick={disconnect} className=\"disconnect-btn\">\n                        Disconnect\n                    </button>\n                )}\n            </header>\n\n            <div className=\"tabs\">\n                <button onClick={() => setTab('auth')} className={`tab ${tab === 'auth' ? 'active' : ''}`}>\n                    Authentication\n                </button>\n                <button\n                    onClick={() => setTab('download')}\n                    className={`tab ${tab === 'download' ? 'active' : ''}`}\n                    disabled={!client}\n                >\n                    Download Media\n                </button>\n                <button onClick={() => setTab('about')} className={`tab ${tab === 'about' ? 'active' : ''}`}>\n                    About\n                </button>\n            </div>\n\n            <div className=\"tab-content\">\n                {tab === 'auth' && (\n                    <div className=\"auth-container\">\n                        <h2>Telegram Login</h2>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"apiId\">API ID</label>\n                            <input\n                                id=\"apiId\"\n                                placeholder=\"API ID (from my.telegram.org)\"\n                                value={apiId}\n                                onChange={(e) => setApiId(e.target.value.trim())}\n                                type=\"text\"\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"apiHash\">API Hash</label>\n                            <input\n                                id=\"apiHash\"\n                                placeholder=\"API Hash\"\n                                value={apiHash}\n                                onChange={(e) => setApiHash(e.target.value.trim())}\n                                type=\"password\"\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"phone\">Phone Number</label>\n                            <input\n                                id=\"phone\"\n                                placeholder=\"Phone (+1234567890)\"\n                                value={phone}\n                                onChange={(e) => setPhone(e.target.value.trim())}\n                                type=\"tel\"\n                            />\n                        </div>\n                        <button onClick={connect} className=\"connect-btn\" disabled={isWaitingForCode}>\n                            {isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'}\n                        </button>\n                        {isWaitingForCode && (\n                            <div className=\"verification-box\">\n                                <div className=\"input-group\">\n                                    <label htmlFor=\"code\">Verification Code</label>\n                                    <input\n                                        id=\"code\"\n                                        placeholder=\"Verification Code\"\n                                        value={code}\n                                        onChange={(e) => setCode(e.target.value.trim())}\n                                        type=\"text\"\n                                        autoFocus\n                                    />\n                                </div>\n                                <button onClick={verifyCode} className=\"verify-btn\" disabled={!code.trim()}>\n                                    Verify Code\n                                </button>\n                            </div>\n                        )}\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'download' && client && (\n                    <div className=\"download-container\">\n                        <h2>Download Media</h2>\n                        <div className=\"search-container\">\n                            <div className=\"input-group\">\n                                <label htmlFor=\"chatInput\">Chat ID or @username</label>\n                                <input\n                                    id=\"chatInput\"\n                                    placeholder=\"Chat ID or @username\"\n                                    value={chatInput}\n                                    onChange={(e) => setChatInput(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </div>\n                            <button\n                                onClick={fetchMedia}\n                                className=\"fetch-btn\"\n                                disabled={progress > 0 && progress < 100}\n                            >\n                                {progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'}\n                            </button>\n                        </div>\n\n                        {mediaItems.length > 0 && (\n                            <div className=\"media-actions\">\n                                <button onClick={selectAllItems} className=\"select-all-btn\">\n                                    {selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'}\n                                </button>\n                                <button\n                                    onClick={downloadSelected}\n                                    className=\"download-selected-btn\"\n                                    disabled={selectedItems.size === 0 || isDownloading}\n                                >\n                                    Download Selected ({selectedItems.size})\n                                </button>\n                            </div>\n                        )}\n\n                        <div className=\"media-grid\">\n                            {mediaItems.length > 0 ? (\n                                mediaItems.map((item) => (\n                                    <div\n                                        key={item.id}\n                                        className={`media-item ${selectedItems.has(item.id) ? 'selected' : ''}`}\n                                        onClick={() => toggleItemSelection(item.id)}\n                                    >\n                                        <div className=\"media-preview\">\n                                            {item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'}\n                                        </div>\n                                        <div className=\"media-info\">\n                                            <span className=\"filename\" title={item.filename}>\n                                                {item.filename}\n                                            </span>\n                                            <span className=\"file-size\">{formatFileSize(item.size)}</span>\n                                            <span className=\"file-date\">{item.date}</span>\n                                        </div>\n                                        <button\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                downloadFile(item);\n                                            }}\n                                            className=\"download-btn\"\n                                            disabled={isDownloading}\n                                        >\n                                            {isDownloading ? 'Downloading...' : 'Download'}\n                                        </button>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"empty-state\">\n                                    {progress > 0 && progress < 100\n                                        ? 'Loading media...'\n                                        : 'No media found. Enter a chat ID and click \"Fetch Media\"'}\n                                </div>\n                            )}\n                        </div>\n                        {progress > 0 && (\n                            <div className=\"progress-container\">\n                                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                                    {progress}%\n                                </div>\n                            </div>\n                        )}\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'about' && (\n                    <div className=\"about-container\">\n                        <h2>About This App</h2>\n                        <p>\n                            This application allows you to download media from Telegram chats directly to your browser's\n                            download folder.\n                        </p>\n                        <h3>How to use:</h3>\n                        <ol>\n                            <li>\n                                Get your API ID and Hash from{' '}\n                                <a href=\"https://my.telegram.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                    my.telegram.org\n                                </a>\n                            </li>\n                            <li>Enter your credentials in the Authentication tab</li>\n                            <li>After connecting, go to the Download Media tab</li>\n                            <li>Enter a chat ID or username to fetch media</li>\n                            <li>Files will download directly to your default download location</li>\n                        </ol>\n                        <div className=\"disclaimer\">\n                            <strong>Note:</strong> This app runs entirely in your browser. Your credentials and downloads\n                            are not processed through any external server.\n                        </div>\n                        <div className=\"version-info\">Version 2.1 | Direct Browser Downloads</div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}