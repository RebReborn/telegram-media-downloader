{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dialog = void 0;\nconst api_1 = require(\"../api\");\nconst Utils_1 = require(\"../../Utils\");\nconst draft_1 = require(\"./draft\");\nconst Helpers_1 = require(\"../../Helpers\");\nconst inspect_1 = require(\"../../inspect\");\nclass Dialog {\n  [inspect_1.inspect.custom]() {\n    return (0, Helpers_1.betterConsoleLog)(this);\n  }\n  constructor(client, dialog, entities, message) {\n    this._client = client;\n    this.dialog = dialog;\n    this.pinned = !!dialog.pinned;\n    this.folderId = dialog.folderId;\n    this.archived = dialog.folderId != undefined;\n    this.message = message;\n    this.date = this.message.date;\n    this.entity = entities.get((0, Utils_1.getPeerId)(dialog.peer));\n    this.inputEntity = (0, Utils_1.getInputPeer)(this.entity);\n    if (this.entity) {\n      this.id = (0, Helpers_1.returnBigInt)((0, Utils_1.getPeerId)(this.entity)); // ^ May be InputPeerSelf();\n      this.name = this.title = (0, Utils_1.getDisplayName)(this.entity);\n    }\n    this.unreadCount = dialog.unreadCount;\n    this.unreadMentionsCount = dialog.unreadMentionsCount;\n    if (!this.entity) {\n      throw new Error(\"Entity not found for dialog\");\n    }\n    this.draft = new draft_1.Draft(client, this.entity, this.dialog.draft);\n    this.isUser = this.entity instanceof api_1.Api.User;\n    this.isGroup = !!(this.entity instanceof api_1.Api.Chat || this.entity instanceof api_1.Api.ChatForbidden || this.entity instanceof api_1.Api.Channel && this.entity.megagroup);\n    this.isChannel = this.entity instanceof api_1.Api.Channel;\n  }\n}\nexports.Dialog = Dialog;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}