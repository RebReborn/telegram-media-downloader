{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n  const connect = async () => {\n    try {\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3,\n        useWSS: true,\n        apiHash: apiHash,\n        apiId: parseInt(apiId),\n        appVersion: '1.0.0',\n        deviceModel: 'Browser',\n        systemVersion: 'Web'\n      });\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Authentication error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected successfully!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Connection error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({\n        text: 'Verifying...',\n        type: 'loading'\n      });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({\n        text: 'Verification failed. Try connecting again.',\n        type: 'error'\n      });\n    }\n  };\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({\n        text: 'Please connect and enter a chat ID/username',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setProgress(10);\n      setAuthStatus({\n        text: 'Fetching media...',\n        type: 'loading'\n      });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => {\n        var _m$media$document;\n        let filename = 'unknown';\n        let fileType = 'file';\n        if (m.photo) {\n          filename = `photo_${m.id}.jpg`;\n          fileType = 'photo';\n        } else if (m.video) {\n          filename = `video_${m.id}.mp4`;\n          fileType = 'video';\n        } else if (m.document) {\n          const fileAttr = m.document.attributes.find(attr => attr.className === 'DocumentAttributeFilename');\n          filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n          fileType = m.document.mimeType || 'file';\n        }\n        return {\n          id: m.id,\n          type: fileType,\n          filename,\n          message: m,\n          size: ((_m$media$document = m.media.document) === null || _m$media$document === void 0 ? void 0 : _m$media$document.size) || 0,\n          date: new Date(m.date * 1000).toLocaleString()\n        };\n      });\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({\n        text: `Found ${items.length} media items`,\n        type: 'success'\n      });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        text: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n  const downloadFile = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      var _mediaItem$message$me, _mediaItem$message$me2, _mediaItem$message$me3;\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Preparing download for ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n\n      // 1. Get file reference\n      const file = await client.invoke({\n        _: 'upload.getFile',\n        location: mediaItem.message.media.document || mediaItem.message.media.photo,\n        offset: 0,\n        limit: 1024 * 1024\n      });\n\n      // 2. Construct direct download URL\n      const dcId = file.dc_id;\n      const fileId = file.id;\n      const accessHash = ((_mediaItem$message$me = mediaItem.message.media.document) === null || _mediaItem$message$me === void 0 ? void 0 : _mediaItem$message$me.accessHash) || ((_mediaItem$message$me2 = mediaItem.message.media.photo) === null || _mediaItem$message$me2 === void 0 ? void 0 : _mediaItem$message$me2.accessHash);\n      const size = ((_mediaItem$message$me3 = mediaItem.message.media.document) === null || _mediaItem$message$me3 === void 0 ? void 0 : _mediaItem$message$me3.size) || 0;\n      const downloadUrl = `https://api.telegram.org/file/bot${client.session.dcId}/${dcId}/${fileId}?access_hash=${accessHash}&size=${size}`;\n\n      // 3. Force browser download\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n\n      // 4. Cleanup\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(downloadUrl);\n      }, 100);\n      setAuthStatus({\n        text: 'Download started in browser! Check your downloads folder.',\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Direct download failed: ${err.message}. Trying alternative method...`,\n        type: 'warning'\n      });\n      await fallbackDownload(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  const fallbackDownload = async mediaItem => {\n    try {\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          setProgress(Math.round(received / total * 100));\n        }\n      });\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      a.click();\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n    } catch (err) {\n      throw err;\n    }\n  };\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({\n        text: 'Please select files to download',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Preparing ${selectedItems.size} downloads...`,\n        type: 'loading'\n      });\n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) {\n          await downloadFile(item);\n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n      }\n      setAuthStatus({\n        text: `Started ${selectedItems.size} downloads!`,\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Batch download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  const toggleItemSelection = id => {\n    const newSelected = new Set(selectedItems);\n    if (newSelected.has(id)) {\n      newSelected.delete(id);\n    } else {\n      newSelected.add(id);\n    }\n    setSelectedItems(newSelected);\n  };\n  const selectAllItems = () => {\n    if (selectedItems.size === mediaItems.length) {\n      setSelectedItems(new Set());\n    } else {\n      setSelectedItems(new Set(mediaItems.map(item => item.id)));\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Telegram Media Downloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        className: \"disconnect-btn\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiId\",\n            children: \"API ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiId\",\n            placeholder: \"API ID (from my.telegram.org)\",\n            value: apiId,\n            onChange: e => setApiId(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiHash\",\n            children: \"API Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiHash\",\n            placeholder: \"API Hash\",\n            value: apiHash,\n            onChange: e => setApiHash(e.target.value.trim()),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone\",\n            placeholder: \"Phone (+1234567890)\",\n            value: phone,\n            onChange: e => setPhone(e.target.value.trim()),\n            type: \"tel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          disabled: isWaitingForCode,\n          children: isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"code\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"code\",\n              placeholder: \"Verification Code\",\n              value: code,\n              onChange: e => setCode(e.target.value.trim()),\n              type: \"text\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chatInput\",\n              children: \"Chat ID or @username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"chatInput\",\n              placeholder: \"Chat ID or @username\",\n              value: chatInput,\n              onChange: e => setChatInput(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), mediaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: selectAllItems,\n            className: \"select-all-btn\",\n            children: selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadSelected,\n            className: \"download-selected-btn\",\n            disabled: selectedItems.size === 0 || isDownloading,\n            children: [\"Download Selected (\", selectedItems.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `media-item ${selectedItems.has(item.id) ? 'selected' : ''}`,\n            onClick: () => toggleItemSelection(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                title: item.filename,\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: formatFileSize(item.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-date\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                downloadFile(item);\n              },\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: [authStatus.text, authStatus.type === 'warning' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"download-notice\",\n            children: [\"Pop-up blocked? Try allowing pop-ups for this site or\", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              onClick: e => {\n                e.preventDefault();\n                window.open(downloadUrl, '_blank');\n              },\n              children: \" click here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats directly to your device.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Get your API ID and Hash from \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://my.telegram.org\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"my.telegram.org\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to the Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Files will download directly to your browser's download folder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), \" This app runs entirely in your browser. Your credentials are not stored or sent to any server. Downloads go directly from Telegram to your device.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"version-info\",\n          children: \"Version 2.0 | Direct Browser Downloads\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WMYvQULB+AOG/dxd55v9Z43nFK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","selectedItems","setSelectedItems","Set","verificationResolver","current","disconnect","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","useWSS","appVersion","deviceModel","systemVersion","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","_m$media$document","filename","fileType","photo","id","video","document","fileAttr","attributes","find","attr","className","fileName","mimeType","size","date","Date","toLocaleString","length","setTimeout","downloadFile","mediaItem","_mediaItem$message$me","_mediaItem$message$me2","_mediaItem$message$me3","file","invoke","_","location","offset","dcId","dc_id","fileId","accessHash","downloadUrl","a","createElement","href","download","style","display","body","appendChild","click","removeChild","window","URL","revokeObjectURL","fallbackDownload","buffer","downloadMedia","progressCallback","received","total","Math","round","blob","Blob","url","createObjectURL","downloadSelected","item","toggleItemSelection","newSelected","has","delete","add","selectAllItems","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","removeItem","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","placeholder","value","onChange","e","target","autoFocus","includes","title","stopPropagation","width","preventDefault","open","rel","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n\n  const connect = async () => {\n    try {\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n\n      setAuthStatus({ text: 'Connecting...', type: 'loading' });\n      setIsWaitingForCode(false);\n      setCode('');\n\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(\n        new StringSession(savedSession),\n        parseInt(apiId),\n        apiHash,\n        { \n          connectionRetries: 3,\n          useWSS: true,\n          apiHash: apiHash,\n          apiId: parseInt(apiId),\n          appVersion: '1.0.0',\n          deviceModel: 'Browser',\n          systemVersion: 'Web'\n        }\n      );\n\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({ text: 'Enter verification code sent to your phone', type: 'info' });\n          setIsWaitingForCode(true);\n          return new Promise((resolve) => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: (err) => {\n          setAuthStatus({ text: `Authentication error: ${err.message}`, type: 'error' });\n          setIsWaitingForCode(false);\n        },\n      });\n\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({ text: 'Connected successfully!', type: 'success' });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({ text: `Connection error: ${err.message}`, type: 'error' });\n      setIsWaitingForCode(false);\n    }\n  };\n\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({ text: 'Verifying...', type: 'loading' });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({ text: 'Verification failed. Try connecting again.', type: 'error' });\n    }\n  };\n\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({ text: 'Please connect and enter a chat ID/username', type: 'error' });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      setAuthStatus({ text: 'Fetching media...', type: 'loading' });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, { limit: 100 });\n      setProgress(80);\n\n      const items = messages\n        .filter((m) => m.media)\n        .map((m) => {\n          let filename = 'unknown';\n          let fileType = 'file';\n          \n          if (m.photo) {\n            filename = `photo_${m.id}.jpg`;\n            fileType = 'photo';\n          } else if (m.video) {\n            filename = `video_${m.id}.mp4`;\n            fileType = 'video';\n          } else if (m.document) {\n            const fileAttr = m.document.attributes.find((attr) => attr.className === 'DocumentAttributeFilename');\n            filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n            fileType = m.document.mimeType || 'file';\n          }\n          return {\n            id: m.id,\n            type: fileType,\n            filename,\n            message: m,\n            size: m.media.document?.size || 0,\n            date: new Date(m.date * 1000).toLocaleString(),\n          };\n        });\n\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({ text: `Found ${items.length} media items`, type: 'success' });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({ text: `Fetch error: ${err.message}`, type: 'error' });\n      setProgress(0);\n    }\n  };\n\n  const downloadFile = async (mediaItem) => {\n    if (!client || !mediaItem.message.media) return;\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Preparing download for ${mediaItem.filename}...`, type: 'loading' });\n\n      // 1. Get file reference\n      const file = await client.invoke({\n        _: 'upload.getFile',\n        location: mediaItem.message.media.document || mediaItem.message.media.photo,\n        offset: 0,\n        limit: 1024 * 1024\n      });\n\n      // 2. Construct direct download URL\n      const dcId = file.dc_id;\n      const fileId = file.id;\n      const accessHash = mediaItem.message.media.document?.accessHash || mediaItem.message.media.photo?.accessHash;\n      const size = mediaItem.message.media.document?.size || 0;\n      \n      const downloadUrl = `https://api.telegram.org/file/bot${client.session.dcId}/${dcId}/${fileId}?access_hash=${accessHash}&size=${size}`;\n\n      // 3. Force browser download\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      \n      // 4. Cleanup\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(downloadUrl);\n      }, 100);\n\n      setAuthStatus({ \n        text: 'Download started in browser! Check your downloads folder.', \n        type: 'success' \n      });\n    } catch (err) {\n      setAuthStatus({ \n        text: `Direct download failed: ${err.message}. Trying alternative method...`, \n        type: 'warning' \n      });\n      await fallbackDownload(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const fallbackDownload = async (mediaItem) => {\n    try {\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          setProgress(Math.round((received / total) * 100));\n        }\n      });\n\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      a.click();\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n    } catch (err) {\n      throw err;\n    }\n  };\n\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({ text: 'Please select files to download', type: 'error' });\n      return;\n    }\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Preparing ${selectedItems.size} downloads...`, type: 'loading' });\n      \n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) {\n          await downloadFile(item);\n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n      }\n      \n      setAuthStatus({ text: `Started ${selectedItems.size} downloads!`, type: 'success' });\n    } catch (err) {\n      setAuthStatus({ text: `Batch download failed: ${err.message}`, type: 'error' });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const toggleItemSelection = (id) => {\n    const newSelected = new Set(selectedItems);\n    if (newSelected.has(id)) {\n      newSelected.delete(id);\n    } else {\n      newSelected.add(id);\n    }\n    setSelectedItems(newSelected);\n  };\n\n  const selectAllItems = () => {\n    if (selectedItems.size === mediaItems.length) {\n      setSelectedItems(new Set());\n    } else {\n      setSelectedItems(new Set(mediaItems.map(item => item.id)));\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({ text: 'Disconnected', type: 'info' });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Telegram Media Downloader</h1>\n        {client && (\n          <button onClick={disconnect} className=\"disconnect-btn\">\n            Disconnect\n          </button>\n        )}\n      </header>\n\n      <div className=\"tabs\">\n        <button\n          onClick={() => setTab('auth')}\n          className={`tab ${tab === 'auth' ? 'active' : ''}`}\n        >\n          Authentication\n        </button>\n        <button\n          onClick={() => setTab('download')}\n          className={`tab ${tab === 'download' ? 'active' : ''}`}\n          disabled={!client}\n        >\n          Download Media\n        </button>\n        <button\n          onClick={() => setTab('about')}\n          className={`tab ${tab === 'about' ? 'active' : ''}`}\n        >\n          About\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {tab === 'auth' && (\n          <div className=\"auth-container\">\n            <h2>Telegram Login</h2>\n            <div className=\"input-group\">\n              <label htmlFor=\"apiId\">API ID</label>\n              <input\n                id=\"apiId\"\n                placeholder=\"API ID (from my.telegram.org)\"\n                value={apiId}\n                onChange={(e) => setApiId(e.target.value.trim())}\n                type=\"text\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"apiHash\">API Hash</label>\n              <input\n                id=\"apiHash\"\n                placeholder=\"API Hash\"\n                value={apiHash}\n                onChange={(e) => setApiHash(e.target.value.trim())}\n                type=\"password\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"phone\">Phone Number</label>\n              <input\n                id=\"phone\"\n                placeholder=\"Phone (+1234567890)\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value.trim())}\n                type=\"tel\"\n              />\n            </div>\n            <button onClick={connect} className=\"connect-btn\" disabled={isWaitingForCode}>\n              {isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'}\n            </button>\n            {isWaitingForCode && (\n              <div className=\"verification-box\">\n                <div className=\"input-group\">\n                  <label htmlFor=\"code\">Verification Code</label>\n                  <input\n                    id=\"code\"\n                    placeholder=\"Verification Code\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value.trim())}\n                    type=\"text\"\n                    autoFocus\n                  />\n                </div>\n                <button\n                  onClick={verifyCode}\n                  className=\"verify-btn\"\n                  disabled={!code.trim()}\n                >\n                  Verify Code\n                </button>\n              </div>\n            )}\n            {authStatus.text && (\n              <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n            )}\n          </div>\n        )}\n\n        {tab === 'download' && client && (\n          <div className=\"download-container\">\n            <h2>Download Media</h2>\n            <div className=\"search-container\">\n              <div className=\"input-group\">\n                <label htmlFor=\"chatInput\">Chat ID or @username</label>\n                <input\n                  id=\"chatInput\"\n                  placeholder=\"Chat ID or @username\"\n                  value={chatInput}\n                  onChange={(e) => setChatInput(e.target.value)}\n                  type=\"text\"\n                />\n              </div>\n              <button\n                onClick={fetchMedia}\n                className=\"fetch-btn\"\n                disabled={progress > 0 && progress < 100}\n              >\n                {progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'}\n              </button>\n            </div>\n            \n            {mediaItems.length > 0 && (\n              <div className=\"media-actions\">\n                <button\n                  onClick={selectAllItems}\n                  className=\"select-all-btn\"\n                >\n                  {selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'}\n                </button>\n                <button\n                  onClick={downloadSelected}\n                  className=\"download-selected-btn\"\n                  disabled={selectedItems.size === 0 || isDownloading}\n                >\n                  Download Selected ({selectedItems.size})\n                </button>\n              </div>\n            )}\n            \n            <div className=\"media-grid\">\n              {mediaItems.length > 0 ? (\n                mediaItems.map((item) => (\n                  <div \n                    key={item.id} \n                    className={`media-item ${selectedItems.has(item.id) ? 'selected' : ''}`}\n                    onClick={() => toggleItemSelection(item.id)}\n                  >\n                    <div className=\"media-preview\">\n                      {item.type.includes('image') ? '📷' : \n                       item.type.includes('video') ? '🎥' : '📄'}\n                    </div>\n                    <div className=\"media-info\">\n                      <span className=\"filename\" title={item.filename}>{item.filename}</span>\n                      <span className=\"file-size\">{formatFileSize(item.size)}</span>\n                      <span className=\"file-date\">{item.date}</span>\n                    </div>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        downloadFile(item);\n                      }}\n                      className=\"download-btn\"\n                      disabled={isDownloading}\n                    >\n                      Download\n                    </button>\n                  </div>\n                ))\n              ) : (\n                <div className=\"empty-state\">\n                  {progress > 0 && progress < 100\n                    ? 'Loading media...'\n                    : 'No media found. Enter a chat ID and click \"Fetch Media\"'}\n                </div>\n              )}\n            </div>\n            {progress > 0 && (\n              <div className=\"progress-container\">\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                  {progress}%\n                </div>\n              </div>\n            )}\n            {authStatus.text && (\n              <div className={`status ${authStatus.type}`}>\n                {authStatus.text}\n                {authStatus.type === 'warning' && (\n                  <div className=\"download-notice\">\n                    Pop-up blocked? Try allowing pop-ups for this site or \n                    <a href=\"#\" onClick={(e) => {\n                      e.preventDefault();\n                      window.open(downloadUrl, '_blank');\n                    }}> click here</a>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        )}\n\n        {tab === 'about' && (\n          <div className=\"about-container\">\n            <h2>About This App</h2>\n            <p>This application allows you to download media from Telegram chats directly to your device.</p>\n            <h3>How to use:</h3>\n            <ol>\n              <li>Get your API ID and Hash from <a href=\"https://my.telegram.org\" target=\"_blank\" rel=\"noopener noreferrer\">my.telegram.org</a></li>\n              <li>Enter your credentials in the Authentication tab</li>\n              <li>After connecting, go to the Download Media tab</li>\n              <li>Enter a chat ID or username to fetch media</li>\n              <li>Files will download directly to your browser's download folder</li>\n            </ol>\n            <div className=\"disclaimer\">\n              <strong>Note:</strong> This app runs entirely in your browser. Your credentials are not stored or sent to any server.\n              Downloads go directly from Telegram to your device.\n            </div>\n            <div className=\"version-info\">\n              Version 2.0 | Direct Browser Downloads\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}