{"ast":null,"code":"\"use strict\";\n\n/*\n * Imported from https://github.com/spalt08/cryptography/blob/master/packages/aes/src/utils/words.ts\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.s2i = s2i;\nexports.getWords = getWords;\nexports.xor = xor;\nfunction s2i(str, pos) {\n  return str.charCodeAt(pos) << 24 ^ str.charCodeAt(pos + 1) << 16 ^ str.charCodeAt(pos + 2) << 8 ^ str.charCodeAt(pos + 3);\n}\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n  if (key instanceof Uint32Array) {\n    return key;\n  }\n  if (typeof key === \"string\") {\n    if (key.length % 4 !== 0) for (let i = key.length % 4; i <= 4; i++) key += \"\\0x00\";\n    const buf = new Uint32Array(key.length / 4);\n    for (let i = 0; i < key.length; i += 4) buf[i / 4] = s2i(key, i);\n    return buf;\n  }\n  if (key instanceof Uint8Array) {\n    const buf = new Uint32Array(key.length / 4);\n    for (let i = 0; i < key.length; i += 4) {\n      buf[i / 4] = key[i] << 24 ^ key[i + 1] << 16 ^ key[i + 2] << 8 ^ key[i + 3];\n    }\n    return buf;\n  }\n  throw new Error(\"Unable to create 32-bit words\");\n}\nfunction xor(left, right, to = left) {\n  for (let i = 0; i < left.length; i++) to[i] = left[i] ^ right[i];\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","s2i","getWords","xor","str","pos","charCodeAt","key","Uint32Array","length","i","buf","Uint8Array","Error","left","right","to"],"sources":["C:/Users/Rodrick/Documents/telegram-media-downloader/node_modules/telegram/crypto/words.js"],"sourcesContent":["\"use strict\";\n/*\n * Imported from https://github.com/spalt08/cryptography/blob/master/packages/aes/src/utils/words.ts\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.s2i = s2i;\nexports.getWords = getWords;\nexports.xor = xor;\nfunction s2i(str, pos) {\n    return ((str.charCodeAt(pos) << 24) ^\n        (str.charCodeAt(pos + 1) << 16) ^\n        (str.charCodeAt(pos + 2) << 8) ^\n        str.charCodeAt(pos + 3));\n}\n/**\n * Helper function for transforming string key to Uint32Array\n */\nfunction getWords(key) {\n    if (key instanceof Uint32Array) {\n        return key;\n    }\n    if (typeof key === \"string\") {\n        if (key.length % 4 !== 0)\n            for (let i = key.length % 4; i <= 4; i++)\n                key += \"\\0x00\";\n        const buf = new Uint32Array(key.length / 4);\n        for (let i = 0; i < key.length; i += 4)\n            buf[i / 4] = s2i(key, i);\n        return buf;\n    }\n    if (key instanceof Uint8Array) {\n        const buf = new Uint32Array(key.length / 4);\n        for (let i = 0; i < key.length; i += 4) {\n            buf[i / 4] =\n                (key[i] << 24) ^\n                    (key[i + 1] << 16) ^\n                    (key[i + 2] << 8) ^\n                    key[i + 3];\n        }\n        return buf;\n    }\n    throw new Error(\"Unable to create 32-bit words\");\n}\nfunction xor(left, right, to = left) {\n    for (let i = 0; i < left.length; i++)\n        to[i] = left[i] ^ right[i];\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACAA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,GAAG,GAAGA,GAAG;AACjBF,OAAO,CAACG,QAAQ,GAAGA,QAAQ;AAC3BH,OAAO,CAACI,GAAG,GAAGA,GAAG;AACjB,SAASF,GAAGA,CAACG,GAAG,EAAEC,GAAG,EAAE;EACnB,OAASD,GAAG,CAACE,UAAU,CAACD,GAAG,CAAC,IAAI,EAAE,GAC7BD,GAAG,CAACE,UAAU,CAACD,GAAG,GAAG,CAAC,CAAC,IAAI,EAAG,GAC9BD,GAAG,CAACE,UAAU,CAACD,GAAG,GAAG,CAAC,CAAC,IAAI,CAAE,GAC9BD,GAAG,CAACE,UAAU,CAACD,GAAG,GAAG,CAAC,CAAC;AAC/B;AACA;AACA;AACA;AACA,SAASH,QAAQA,CAACK,GAAG,EAAE;EACnB,IAAIA,GAAG,YAAYC,WAAW,EAAE;IAC5B,OAAOD,GAAG;EACd;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzB,IAAIA,GAAG,CAACE,MAAM,GAAG,CAAC,KAAK,CAAC,EACpB,KAAK,IAAIC,CAAC,GAAGH,GAAG,CAACE,MAAM,GAAG,CAAC,EAAEC,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EACpCH,GAAG,IAAI,OAAO;IACtB,MAAMI,GAAG,GAAG,IAAIH,WAAW,CAACD,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC;IAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAClCC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,GAAGT,GAAG,CAACM,GAAG,EAAEG,CAAC,CAAC;IAC5B,OAAOC,GAAG;EACd;EACA,IAAIJ,GAAG,YAAYK,UAAU,EAAE;IAC3B,MAAMD,GAAG,GAAG,IAAIH,WAAW,CAACD,GAAG,CAACE,MAAM,GAAG,CAAC,CAAC;IAC3C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,CAACE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;MACpCC,GAAG,CAACD,CAAC,GAAG,CAAC,CAAC,GACLH,GAAG,CAACG,CAAC,CAAC,IAAI,EAAE,GACRH,GAAG,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG,GACjBH,GAAG,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GACjBH,GAAG,CAACG,CAAC,GAAG,CAAC,CAAC;IACtB;IACA,OAAOC,GAAG;EACd;EACA,MAAM,IAAIE,KAAK,CAAC,+BAA+B,CAAC;AACpD;AACA,SAASV,GAAGA,CAACW,IAAI,EAAEC,KAAK,EAAEC,EAAE,GAAGF,IAAI,EAAE;EACjC,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGI,IAAI,CAACL,MAAM,EAAEC,CAAC,EAAE,EAChCM,EAAE,CAACN,CAAC,CAAC,GAAGI,IAAI,CAACJ,CAAC,CAAC,GAAGK,KAAK,CAACL,CAAC,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}