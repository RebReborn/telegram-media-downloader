{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TimedOutError = exports.ServerError = exports.FloodError = exports.AuthKeyError = exports.NotFoundError = exports.ForbiddenError = exports.UnauthorizedError = exports.BadRequestError = exports.InvalidDCError = exports.RPCError = void 0;\nconst ts_custom_error_1 = require(\"ts-custom-error\");\nclass RPCError extends ts_custom_error_1.CustomError {\n  constructor(message, request, code) {\n    super(\"{0}: {1}{2}\".replace(\"{0}\", (code === null || code === void 0 ? void 0 : code.toString()) || \"\").replace(\"{1}\", message || \"\").replace(\"{2}\", RPCError._fmtRequest(request)));\n    this.code = code;\n    this.errorMessage = message;\n  }\n  static _fmtRequest(request) {\n    // TODO fix this\n    if (request) {\n      return ` (caused by ${request.className})`;\n    } else {\n      return \"\";\n    }\n  }\n}\nexports.RPCError = RPCError;\n/**\n * The request must be repeated, but directed to a different data center.\n */\nclass InvalidDCError extends RPCError {\n  constructor(message, request, code) {\n    super(message, request, code);\n    this.code = code || 303;\n    this.errorMessage = message || \"ERROR_SEE_OTHER\";\n  }\n}\nexports.InvalidDCError = InvalidDCError;\n/**\n * The query contains errors. In the event that a request was created\n * using a form and contains user generated data, the user should be\n * notified that the data must be corrected before the query is repeated.\n */\nclass BadRequestError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 400;\n    this.errorMessage = \"BAD_REQUEST\";\n  }\n}\nexports.BadRequestError = BadRequestError;\n/**\n * There was an unauthorized attempt to use functionality available only\n * to authorized users.\n */\nclass UnauthorizedError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 401;\n    this.errorMessage = \"UNAUTHORIZED\";\n  }\n}\nexports.UnauthorizedError = UnauthorizedError;\n/**\n * Privacy violation. For example, an attempt to write a message to\n * someone who has blacklisted the current user.\n */\nclass ForbiddenError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 403;\n    this.errorMessage = \"FORBIDDEN\";\n  }\n}\nexports.ForbiddenError = ForbiddenError;\n/**\n * An attempt to invoke a non-existent object, such as a method.\n */\nclass NotFoundError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 404;\n    this.errorMessage = \"NOT_FOUND\";\n  }\n}\nexports.NotFoundError = NotFoundError;\n/**\n * Errors related to invalid authorization key, like\n * AUTH_KEY_DUPLICATED which can cause the connection to fail.\n */\nclass AuthKeyError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 406;\n    this.errorMessage = \"AUTH_KEY\";\n  }\n}\nexports.AuthKeyError = AuthKeyError;\n/**\n * The maximum allowed number of attempts to invoke the given method\n * with the given input parameters has been exceeded. For example, in an\n * attempt to request a large number of text messages (SMS) for the same\n * phone number.\n */\nclass FloodError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 420;\n    this.errorMessage = \"FLOOD\";\n  }\n}\nexports.FloodError = FloodError;\n/**\n * An internal server error occurred while a request was being processed\n * for example, there was a disruption while accessing a database or file\n * storage\n */\nclass ServerError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 500; // Also witnessed as -500\n    this.errorMessage = \"INTERNAL\";\n  }\n}\nexports.ServerError = ServerError;\n/**\n * Clicking the inline buttons of bots that never (or take to long to)\n * call ``answerCallbackQuery`` will result in this \"special\" RPCError.\n */\nclass TimedOutError extends RPCError {\n  constructor() {\n    super(...arguments);\n    this.code = 503; // Only witnessed as -503\n    this.errorMessage = \"Timeout\";\n  }\n}\nexports.TimedOutError = TimedOutError;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}