{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrick\\\\Documents\\\\telegram-media-downloader\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const verificationResolver = useRef(null);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n    };\n  }, []);\n  const connect = async () => {\n    try {\n      // Validate inputs\n      if (!apiId.match(/^\\d+$/)) {\n        throw new Error('API ID must be numeric');\n      }\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) {\n        throw new Error('Invalid API Hash format (32 characters hexadecimal)');\n      }\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) {\n        throw new Error('Invalid phone number format. Use +1234567890');\n      }\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3\n      });\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected successfully!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({\n        text: 'Verifying...',\n        type: 'loading'\n      });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({\n        text: 'Verification failed. Try connecting again.',\n        type: 'error'\n      });\n    }\n  };\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) return;\n    try {\n      setProgress(10);\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => ({\n        id: m.id,\n        type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n        filename: m.photo ? `photo_${m.id}.jpg` : m.video ? `video_${m.id}.mp4` : `file_${m.id}.dat`,\n        message: m\n      }));\n      setMediaItems(items);\n      setProgress(100);\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        texté£¼: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n  const downloadFile = async mediaItem => {\n    try {\n      setIsDownloading(true);\n      const buffer = await client.downloadMedia(mediaItem.message);\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      a.click();\n      URL.revokeObjectURL(url);\n      setIsDownloading(false);\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n      setIsDownloading(false);\n    }\n  };\n  const disconnect = () => {\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API ID (from my.telegram.org)\",\n          value: apiId,\n          onChange: e => setApiId(e.target.value.trim()),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API Hash\",\n          value: apiHash,\n          onChange: e => setApiHash(e.target.value.trim()),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Phone (+1234567890)\",\n          value: phone,\n          onChange: e => setPhone(e.target.value.trim()),\n          type: \"tel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          children: \"Connect to Telegram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: disconnect,\n          className: \"disconnect-btn\",\n          children: \"Disconnect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 29\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 29\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Verification Code\",\n            value: code,\n            onChange: e => setCode(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Chat ID or @username\",\n            value: chatInput,\n            onChange: e => setChatInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: \"Fetch Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: [item.type === 'photo' ? 'ð·' : item.type === 'video' ? 'ð¥' : 'ð', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => downloadFile(item),\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: isDownloading ? 'Downloading...' : 'Download'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 25\n        }, this), progress > 0 && progress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 21\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Get your API ID and Hash from my.telegram.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: \"Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zVBm1UwuP6D6XadT+pDzxIpzlng=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","verificationResolver","current","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","id","photo","video","filename","setTimeout","texté£¼","downloadFile","mediaItem","buffer","downloadMedia","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","disconnect","removeItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","placeholder","value","onChange","e","target","length","item","style","width","_c","$RefreshReg$"],"sources":["C:/Users/Rodrick/Documents/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n    const [tab, setTab] = useState('auth');\n    const [apiId, setApiId] = useState('');\n    const [apiHash, setApiHash] = useState('');\n    const [phone, setPhone] = useState('');\n    const [code, setCode] = useState('');\n    const [client, setClient] = useState(null);\n    const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n    const [mediaItems, setMediaItems] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [chatInput, setChatInput] = useState('');\n    const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n    const [isDownloading, setIsDownloading] = useState(false);\n    const verificationResolver = useRef(null);\n\n    // Cleanup effect\n    useEffect(() => {\n        return () => {\n            verificationResolver.current = null;\n        };\n    }, []);\n\n    const connect = async () => {\n        try {\n            // Validate inputs\n            if (!apiId.match(/^\\d+$/)) {\n                throw new Error('API ID must be numeric');\n            }\n            if (!apiHash.match(/^[a-f0-9]{32}$/i)) {\n                throw new Error('Invalid API Hash format (32 characters hexadecimal)');\n            }\n            const cleanPhone = phone.trim();\n            if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) {\n                throw new Error('Invalid phone number format. Use +1234567890');\n            }\n\n            setAuthStatus({ text: 'Connecting...', type: 'loading' });\n            setIsWaitingForCode(false);\n            setCode('');\n\n            const sessionKey = 'telegramSession';\n            const savedSession = localStorage.getItem(sessionKey) || '';\n            const newClient = new TelegramClient(\n                new StringSession(savedSession),\n                parseInt(apiId),\n                apiHash,\n                { connectionRetries: 3 }\n            );\n\n            await newClient.start({\n                phoneNumber: cleanPhone,\n                phoneCode: async () => {\n                    setAuthStatus({ \n                        text: 'Enter verification code sent to your phone', \n                        type: 'info' \n                    });\n                    setIsWaitingForCode(true);\n                    \n                    return new Promise((resolve) => {\n                        verificationResolver.current = resolve;\n                    });\n                },\n                onError: (err) => {\n                    setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n                    setIsWaitingForCode(false);\n                },\n            });\n\n            const session = newClient.session.save();\n            localStorage.setItem(sessionKey, session);\n            setClient(newClient);\n            setAuthStatus({ text: 'Connected successfully!', type: 'success' });\n            setTab('download');\n        } catch (err) {\n            setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n            setIsWaitingForCode(false);\n        }\n    };\n\n    const verifyCode = () => {\n        if (!code.trim()) {\n            setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n            return;\n        }\n        \n        if (verificationResolver.current) {\n            setAuthStatus({ text: 'Verifying...', type: 'loading' });\n            verificationResolver.current(code);\n            verificationResolver.current = null;\n            setIsWaitingForCode(false);\n        } else {\n            setAuthStatus({ text: 'Verification failed. Try connecting again.', type: 'error' });\n        }\n    };\n\n    const fetchMedia = async () => {\n        if (!chatInput.trim() || !client) return;\n        \n        try {\n            setProgress(10);\n            const entity = await client.getInputEntity(chatInput.trim());\n            setProgress(50);\n            const messages = await client.getMessages(entity, { limit: 100 });\n            setProgress(80);\n\n            const items = messages\n                .filter(m => m.media)\n                .map(m => ({\n                    id: m.id,\n                    type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n                    filename: m.photo ? `photo_${m.id}.jpg` :\n                        m.video ? `video_${m.id}.mp4` :\n                            `file_${m.id}.dat`,\n                    message: m\n                }));\n\n            setMediaItems(items);\n            setProgress(100);\n            setTimeout(() => setProgress(0), 1000);\n        } catch (err) {\n            setAuthStatus({ texté£¼: `Fetch error: ${err.message}`, type: 'error' });\n            setProgress(0);\n        }\n    };\n\n    const downloadFile = async (mediaItem) => {\n        try {\n            setIsDownloading(true);\n            const buffer = await client.downloadMedia(mediaItem.message);\n            const blob = new Blob([buffer]);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = mediaItem.filename;\n            a.click();\n            URL.revokeObjectURL(url);\n            setIsDownloading(false);\n        } catch (err) {\n            setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n            setIsDownloading(false);\n        }\n    };\n\n    const disconnect = () => {\n        localStorage.removeItem('telegramSession');\n        setClient(null);\n        setTab('auth');\n        setAuthStatus({ text: 'Disconnected', type: 'info' });\n        setMediaItems([]);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"tabs\">\n                <button \n                    onClick={() => setTab('auth')} \n                    className={`tab ${tab === 'auth' ? 'active' : ''}`}\n                >\n                    Authentication\n                </button>\n                <button \n                    onClick={() => setTab('download')} \n                    className={`tab ${tab === 'download' ? 'active' : ''}`}\n                    disabled={!client}\n                >\n                    Download Media\n                </button>\n                <button \n                    onClick={() => setTab('about')} \n                    className={`tab ${tab === 'about' ? 'active' : ''}`}\n                >\n                    About\n                </button>\n            </div>\n\n            <div className=\"tab-content\">\n                {tab === 'auth' && (\n                    <div className=\"auth-container\">\n                        <h2>Telegram Login</h2>\n                        <input\n                            placeholder=\"API ID (from my.telegram.org)\"\n                            value={apiId}\n                            onChange={(e) => setApiId(e.target.value.trim())}\n                            type=\"text\"\n                        />\n                        <input\n                            placeholder=\"API Hash\"\n                            value={apiHash}\n                            onChange={(e) => setApiHash(e.target.value.trim())}\n                            type=\"password\"\n                        />\n                        <input\n                            placeholder=\"Phone (+1234567890)\"\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value.trim())}\n                            type=\"tel\"\n                        />\n                        <button onClick={connect} className=\"connect-btn\">\n                            Connect to Telegram\n                        </button>\n\n                        {client && (\n                            <button onClick={disconnect} className=\"disconnect-btn\">\n                                Disconnect\n                            </button>\n                        )}\n\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>\n                                {authStatus.text}\n                            </div>\n                        )}\n\n                        {isWaitingForCode && (\n                            <div className=\"verification-box\">\n                                <input\n                                    placeholder=\"Verification Code\"\n                                    value={code}\n                                    onChange={(e) => setCode(e.target.value.trim())}\n                                    type=\"text\"\n                                />\n                                <button \n                                    onClick={verifyCode}\n                                    className=\"verify-btn\"\n                                    disabled={!code.trim()}\n                                >\n                                    Verify Code\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'download' && client && (\n                    <div className=\"download-container\">\n                        <h2>Download Media</h2>\n                        <div className=\"search-container\">\n                            <input\n                                placeholder=\"Chat ID or @username\"\n                                value={chatInput}\n                                onChange={(e) => setChatInput(e.target.value)}\n                                type=\"text\"\n                            />\n                            <button \n                                onClick={fetchMedia} \n                                className=\"fetch-btn\"\n                                disabled={progress > 0 && progress < 100}\n                            >\n                                Fetch Media\n                            </button>\n                        </div>\n                        \n                        <div className=\"media-grid\">\n                            {mediaItems.length > 0 ? (\n                                mediaItems.map(item => (\n                                    <div key={item.id} className=\"media-item\">\n                                        <div className=\"media-preview\">\n                                            {item.type === 'photo' ? 'ð·' : item.type === 'video' ? 'ð¥' : 'ð'}\n                                            <span className=\"filename\">{item.filename}</span>\n                                        </div>\n                                        <button \n                                            onClick={() => downloadFile(item)}\n                                            className=\"download-btn\"\n                                            disabled={isDownloading}\n                                        >\n                                            {isDownloading ? 'Downloading...' : 'Download'}\n                                        </button>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"empty-state\">\n                                    {progress > 0 && progress < 100 ? (\n                                        'Loading media...'\n                                    ) : (\n                                        'No media found. Enter a chat ID and click \"Fetch Media\"'\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                        \n                        {progress > 0 && progress < 100 && (\n                            <div className=\"progress-container\">\n                                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                                    {progress}%\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'about' && (\n                    <div className=\"about-container\">\n                        <h2>About This App</h2>\n                        <p>This application allows you to download media from Telegram chats.</p>\n                        <h3>How to use:</h3>\n                        <ol>\n                            <li>Get your API ID and Hash from my.telegram.org</li>\n                            <li>Enter your credentials in the Authentication tab</li>\n                            <li>After connecting, go to Download Media tab</li>\n                            <li>Enter a chat ID or username to fetch media</li>\n                        </ol>\n                        <div className=\"disclaimer\">\n                            Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}