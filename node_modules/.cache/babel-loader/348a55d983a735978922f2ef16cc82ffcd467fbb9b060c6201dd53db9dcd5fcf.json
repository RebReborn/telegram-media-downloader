{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State declarations\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n\n  // Connection handler\n  const connect = async () => {\n    try {\n      // Validation\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3,\n        useWSS: true,\n        downloadWorkers: 4\n      });\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Auth error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n\n  // Verification handler\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    }\n  };\n\n  // Media fetching\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({\n        text: 'Enter chat ID/username',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setProgress(10);\n      setAuthStatus({\n        text: 'Fetching media...',\n        type: 'loading'\n      });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => {\n        var _m$media$document;\n        let filename = 'file';\n        let fileType = 'file';\n        if (m.photo) {\n          filename = `photo_${m.id}.jpg`;\n          fileType = 'photo';\n        } else if (m.video) {\n          filename = `video_${m.id}.mp4`;\n          fileType = 'video';\n        } else if (m.document) {\n          const fileAttr = m.document.attributes.find(attr => attr.className === 'DocumentAttributeFilename');\n          filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n          fileType = m.document.mimeType || 'file';\n        }\n        return {\n          id: m.id,\n          type: fileType,\n          filename,\n          message: m,\n          size: ((_m$media$document = m.media.document) === null || _m$media$document === void 0 ? void 0 : _m$media$document.size) || 0,\n          date: new Date(m.date * 1000).toLocaleString()\n        };\n      });\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({\n        text: `Found ${items.length} items`,\n        type: 'success'\n      });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        text: `Error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n\n  // File download handler\n  const downloadFile = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Downloading ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        workers: 4,\n        progressCallback: (received, total) => {\n          setProgress(Math.round(received / total * 100));\n        }\n      });\n\n      // Create download link\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n\n      // Clean up\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n      setAuthStatus({\n        text: 'Download started!',\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  // Batch download handler\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({\n        text: 'Select files first',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Downloading ${selectedItems.size} files...`,\n        type: 'loading'\n      });\n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) await downloadFile(item);\n      }\n    } catch (err) {\n      setAuthStatus({\n        text: `Error: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // Selection helpers\n  const toggleItemSelection = id => {\n    const newSelected = new Set(selectedItems);\n    newSelected.has(id) ? newSelected.delete(id) : newSelected.add(id);\n    setSelectedItems(newSelected);\n  };\n  const selectAllItems = () => {\n    setSelectedItems(selectedItems.size === mediaItems.length ? new Set() : new Set(mediaItems.map(item => item.id)));\n  };\n\n  // Helper functions\n  const formatFileSize = bytes => {\n    if (!bytes) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const disconnect = async () => {\n    if (client) await client.disconnect();\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Telegram Media Downloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        className: \"disconnect-btn\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Auth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Downloads\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"API ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"From my.telegram.org\",\n            value: apiId,\n            onChange: e => setApiId(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"API Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"API Hash\",\n            value: apiHash,\n            onChange: e => setApiHash(e.target.value.trim()),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"+1234567890\",\n            value: phone,\n            onChange: e => setPhone(e.target.value.trim()),\n            type: \"tel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          disabled: isWaitingForCode,\n          children: isWaitingForCode ? 'Waiting...' : 'Connect'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Verification code\",\n              value: code,\n              onChange: e => setCode(e.target.value.trim()),\n              type: \"text\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Chat ID/@username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Chat ID or @username\",\n              value: chatInput,\n              onChange: e => setChatInput(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: progress > 0 ? 'Fetching...' : 'Fetch Media'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this), mediaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: selectAllItems,\n            className: \"select-all-btn\",\n            children: selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadSelected,\n            className: \"download-selected-btn\",\n            disabled: selectedItems.size === 0 || isDownloading,\n            children: [\"Download (\", selectedItems.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `media-item ${selectedItems.has(item.id) ? 'selected' : ''}`,\n            onClick: () => toggleItemSelection(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                title: item.filename,\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: formatFileSize(item.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-date\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                downloadFile(item);\n              },\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 ? 'Loading...' : 'No media found'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download media from Telegram chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Get API credentials from my.telegram.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Connect in the Auth tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter chat ID to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Download files directly\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: \"Note: Runs in your browser. No server processing.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WMYvQULB+AOG/dxd55v9Z43nFK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","selectedItems","setSelectedItems","Set","verificationResolver","current","disconnect","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","useWSS","downloadWorkers","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","_m$media$document","filename","fileType","photo","id","video","document","fileAttr","attributes","find","attr","className","fileName","mimeType","size","date","Date","toLocaleString","length","setTimeout","downloadFile","mediaItem","buffer","downloadMedia","workers","progressCallback","received","total","Math","round","blob","Blob","url","URL","createObjectURL","a","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","downloadSelected","item","toggleItemSelection","newSelected","has","delete","add","selectAllItems","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","removeItem","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","placeholder","value","onChange","e","target","autoFocus","includes","title","stopPropagation","style","width","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n  // State declarations\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n\n  // Cleanup effect\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n\n  // Connection handler\n  const connect = async () => {\n    try {\n      // Validation\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n\n      setAuthStatus({ text: 'Connecting...', type: 'loading' });\n      setIsWaitingForCode(false);\n      setCode('');\n\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(\n        new StringSession(savedSession),\n        parseInt(apiId),\n        apiHash,\n        { \n          connectionRetries: 3,\n          useWSS: true,\n          downloadWorkers: 4\n        }\n      );\n\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({ text: 'Enter verification code', type: 'info' });\n          setIsWaitingForCode(true);\n          return new Promise((resolve) => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: (err) => {\n          setAuthStatus({ text: `Auth error: ${err.message}`, type: 'error' });\n          setIsWaitingForCode(false);\n        },\n      });\n\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({ text: 'Connected!', type: 'success' });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n      setIsWaitingForCode(false);\n    }\n  };\n\n  // Verification handler\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({ text: 'Enter verification code', type: 'error' });\n      return;\n    }\n    if (verificationResolver.current) {\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    }\n  };\n\n  // Media fetching\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({ text: 'Enter chat ID/username', type: 'error' });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      setAuthStatus({ text: 'Fetching media...', type: 'loading' });\n      \n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      \n      const messages = await client.getMessages(entity, { limit: 100 });\n      setProgress(80);\n\n      const items = messages\n        .filter((m) => m.media)\n        .map((m) => {\n          let filename = 'file';\n          let fileType = 'file';\n          \n          if (m.photo) {\n            filename = `photo_${m.id}.jpg`;\n            fileType = 'photo';\n          } else if (m.video) {\n            filename = `video_${m.id}.mp4`;\n            fileType = 'video';\n          } else if (m.document) {\n            const fileAttr = m.document.attributes.find((attr) => attr.className === 'DocumentAttributeFilename');\n            filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n            fileType = m.document.mimeType || 'file';\n          }\n          \n          return {\n            id: m.id,\n            type: fileType,\n            filename,\n            message: m,\n            size: m.media.document?.size || 0,\n            date: new Date(m.date * 1000).toLocaleString(),\n          };\n        });\n\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({ text: `Found ${items.length} items`, type: 'success' });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n      setProgress(0);\n    }\n  };\n\n  // File download handler\n  const downloadFile = async (mediaItem) => {\n    if (!client || !mediaItem.message.media) return;\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Downloading ${mediaItem.filename}...`, type: 'loading' });\n\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        workers: 4,\n        progressCallback: (received, total) => {\n          setProgress(Math.round((received / total) * 100));\n        }\n      });\n\n      // Create download link\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      // Clean up\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n\n      setAuthStatus({ text: 'Download started!', type: 'success' });\n    } catch (err) {\n      setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  // Batch download handler\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({ text: 'Select files first', type: 'error' });\n      return;\n    }\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Downloading ${selectedItems.size} files...`, type: 'loading' });\n      \n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) await downloadFile(item);\n      }\n    } catch (err) {\n      setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // Selection helpers\n  const toggleItemSelection = (id) => {\n    const newSelected = new Set(selectedItems);\n    newSelected.has(id) ? newSelected.delete(id) : newSelected.add(id);\n    setSelectedItems(newSelected);\n  };\n\n  const selectAllItems = () => {\n    setSelectedItems(selectedItems.size === mediaItems.length ? new Set() : new Set(mediaItems.map(item => item.id)));\n  };\n\n  // Helper functions\n  const formatFileSize = (bytes) => {\n    if (!bytes) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const disconnect = async () => {\n    if (client) await client.disconnect();\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({ text: 'Disconnected', type: 'info' });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n\n  // Render\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Telegram Media Downloader</h1>\n        {client && <button onClick={disconnect} className=\"disconnect-btn\">Disconnect</button>}\n      </header>\n\n      <div className=\"tabs\">\n        <button onClick={() => setTab('auth')} className={`tab ${tab === 'auth' ? 'active' : ''}`}>\n          Auth\n        </button>\n        <button onClick={() => setTab('download')} className={`tab ${tab === 'download' ? 'active' : ''}`} disabled={!client}>\n          Downloads\n        </button>\n        <button onClick={() => setTab('about')} className={`tab ${tab === 'about' ? 'active' : ''}`}>\n          About\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {tab === 'auth' && (\n          <div className=\"auth-container\">\n            <h2>Login</h2>\n            <div className=\"input-group\">\n              <label>API ID</label>\n              <input\n                placeholder=\"From my.telegram.org\"\n                value={apiId}\n                onChange={(e) => setApiId(e.target.value.trim())}\n                type=\"text\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>API Hash</label>\n              <input\n                placeholder=\"API Hash\"\n                value={apiHash}\n                onChange={(e) => setApiHash(e.target.value.trim())}\n                type=\"password\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label>Phone</label>\n              <input\n                placeholder=\"+1234567890\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value.trim())}\n                type=\"tel\"\n              />\n            </div>\n            <button onClick={connect} className=\"connect-btn\" disabled={isWaitingForCode}>\n              {isWaitingForCode ? 'Waiting...' : 'Connect'}\n            </button>\n            \n            {isWaitingForCode && (\n              <div className=\"verification-box\">\n                <div className=\"input-group\">\n                  <label>Code</label>\n                  <input\n                    placeholder=\"Verification code\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value.trim())}\n                    type=\"text\"\n                    autoFocus\n                  />\n                </div>\n                <button onClick={verifyCode} className=\"verify-btn\" disabled={!code.trim()}>\n                  Verify\n                </button>\n              </div>\n            )}\n            \n            {authStatus.text && <div className={`status ${authStatus.type}`}>{authStatus.text}</div>}\n          </div>\n        )}\n\n        {tab === 'download' && client && (\n          <div className=\"download-container\">\n            <h2>Download Media</h2>\n            <div className=\"search-container\">\n              <div className=\"input-group\">\n                <label>Chat ID/@username</label>\n                <input\n                  placeholder=\"Chat ID or @username\"\n                  value={chatInput}\n                  onChange={(e) => setChatInput(e.target.value)}\n                  type=\"text\"\n                />\n              </div>\n              <button\n                onClick={fetchMedia}\n                className=\"fetch-btn\"\n                disabled={progress > 0 && progress < 100}\n              >\n                {progress > 0 ? 'Fetching...' : 'Fetch Media'}\n              </button>\n            </div>\n            \n            {mediaItems.length > 0 && (\n              <div className=\"media-actions\">\n                <button onClick={selectAllItems} className=\"select-all-btn\">\n                  {selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'}\n                </button>\n                <button\n                  onClick={downloadSelected}\n                  className=\"download-selected-btn\"\n                  disabled={selectedItems.size === 0 || isDownloading}\n                >\n                  Download ({selectedItems.size})\n                </button>\n              </div>\n            )}\n            \n            <div className=\"media-grid\">\n              {mediaItems.length > 0 ? (\n                mediaItems.map((item) => (\n                  <div \n                    key={item.id} \n                    className={`media-item ${selectedItems.has(item.id) ? 'selected' : ''}`}\n                    onClick={() => toggleItemSelection(item.id)}\n                  >\n                    <div className=\"media-preview\">\n                      {item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'}\n                    </div>\n                    <div className=\"media-info\">\n                      <span className=\"filename\" title={item.filename}>{item.filename}</span>\n                      <span className=\"file-size\">{formatFileSize(item.size)}</span>\n                      <span className=\"file-date\">{item.date}</span>\n                    </div>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        downloadFile(item);\n                      }}\n                      className=\"download-btn\"\n                      disabled={isDownloading}\n                    >\n                      Download\n                    </button>\n                  </div>\n                ))\n              ) : (\n                <div className=\"empty-state\">\n                  {progress > 0 ? 'Loading...' : 'No media found'}\n                </div>\n              )}\n            </div>\n            \n            {progress > 0 && (\n              <div className=\"progress-container\">\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                  {progress}%\n                </div>\n              </div>\n            )}\n            \n            {authStatus.text && <div className={`status ${authStatus.type}`}>{authStatus.text}</div>}\n          </div>\n        )}\n\n        {tab === 'about' && (\n          <div className=\"about-container\">\n            <h2>About</h2>\n            <p>Download media from Telegram chats.</p>\n            <ol>\n              <li>Get API credentials from my.telegram.org</li>\n              <li>Connect in the Auth tab</li>\n              <li>Enter chat ID to fetch media</li>\n              <li>Download files directly</li>\n            </ol>\n            <div className=\"disclaimer\">\n              Note: Runs in your browser. No server processing.\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}