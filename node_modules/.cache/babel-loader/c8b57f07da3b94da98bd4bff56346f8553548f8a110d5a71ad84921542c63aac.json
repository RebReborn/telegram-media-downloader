{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ab2i = exports.i2ab = exports.isBigEndian = void 0;\nexports.i2abLow = i2abLow;\nexports.i2abBig = i2abBig;\nexports.ab2iLow = ab2iLow;\nexports.ab2iBig = ab2iBig;\n/**\n * Uint32Array -> ArrayBuffer (low-endian os)\n */\nfunction i2abLow(buf) {\n  const uint8 = new Uint8Array(buf.length * 4);\n  let i = 0;\n  for (let j = 0; j < buf.length; j++) {\n    const int = buf[j];\n    uint8[i++] = int >>> 24;\n    uint8[i++] = int >> 16 & 0xff;\n    uint8[i++] = int >> 8 & 0xff;\n    uint8[i++] = int & 0xff;\n  }\n  return uint8.buffer;\n}\n/**\n * Uint32Array -> ArrayBuffer (big-endian os)\n */\nfunction i2abBig(buf) {\n  return buf.buffer;\n}\n/**\n * ArrayBuffer -> Uint32Array (low-endian os)\n */\nfunction ab2iLow(ab) {\n  const uint8 = new Uint8Array(ab);\n  const buf = new Uint32Array(uint8.length / 4);\n  for (let i = 0; i < uint8.length; i += 4) {\n    buf[i / 4] = uint8[i] << 24 ^ uint8[i + 1] << 16 ^ uint8[i + 2] << 8 ^ uint8[i + 3];\n  }\n  return buf;\n}\n/**\n * ArrayBuffer -> Uint32Array (big-endian os)\n */\nfunction ab2iBig(ab) {\n  return new Uint32Array(ab);\n}\nexports.isBigEndian = new Uint8Array(new Uint32Array([0x01020304]))[0] === 0x01;\nexports.i2ab = exports.isBigEndian ? i2abBig : i2abLow;\nexports.ab2i = exports.isBigEndian ? ab2iBig : ab2iLow;","map":{"version":3,"names":["Object","defineProperty","exports","value","ab2i","i2ab","isBigEndian","i2abLow","i2abBig","ab2iLow","ab2iBig","buf","uint8","Uint8Array","length","i","j","int","buffer","ab","Uint32Array"],"sources":["C:/Users/Rodrick/Documents/telegram-media-downloader/node_modules/telegram/crypto/converters.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ab2i = exports.i2ab = exports.isBigEndian = void 0;\nexports.i2abLow = i2abLow;\nexports.i2abBig = i2abBig;\nexports.ab2iLow = ab2iLow;\nexports.ab2iBig = ab2iBig;\n/**\n * Uint32Array -> ArrayBuffer (low-endian os)\n */\nfunction i2abLow(buf) {\n    const uint8 = new Uint8Array(buf.length * 4);\n    let i = 0;\n    for (let j = 0; j < buf.length; j++) {\n        const int = buf[j];\n        uint8[i++] = int >>> 24;\n        uint8[i++] = (int >> 16) & 0xff;\n        uint8[i++] = (int >> 8) & 0xff;\n        uint8[i++] = int & 0xff;\n    }\n    return uint8.buffer;\n}\n/**\n * Uint32Array -> ArrayBuffer (big-endian os)\n */\nfunction i2abBig(buf) {\n    return buf.buffer;\n}\n/**\n * ArrayBuffer -> Uint32Array (low-endian os)\n */\nfunction ab2iLow(ab) {\n    const uint8 = new Uint8Array(ab);\n    const buf = new Uint32Array(uint8.length / 4);\n    for (let i = 0; i < uint8.length; i += 4) {\n        buf[i / 4] =\n            (uint8[i] << 24) ^\n                (uint8[i + 1] << 16) ^\n                (uint8[i + 2] << 8) ^\n                uint8[i + 3];\n    }\n    return buf;\n}\n/**\n * ArrayBuffer -> Uint32Array (big-endian os)\n */\nfunction ab2iBig(ab) {\n    return new Uint32Array(ab);\n}\nexports.isBigEndian = new Uint8Array(new Uint32Array([0x01020304]))[0] === 0x01;\nexports.i2ab = exports.isBigEndian ? i2abBig : i2abLow;\nexports.ab2i = exports.isBigEndian ? ab2iBig : ab2iLow;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,IAAI,GAAGF,OAAO,CAACG,IAAI,GAAGH,OAAO,CAACI,WAAW,GAAG,KAAK,CAAC;AAC1DJ,OAAO,CAACK,OAAO,GAAGA,OAAO;AACzBL,OAAO,CAACM,OAAO,GAAGA,OAAO;AACzBN,OAAO,CAACO,OAAO,GAAGA,OAAO;AACzBP,OAAO,CAACQ,OAAO,GAAGA,OAAO;AACzB;AACA;AACA;AACA,SAASH,OAAOA,CAACI,GAAG,EAAE;EAClB,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACF,GAAG,CAACG,MAAM,GAAG,CAAC,CAAC;EAC5C,IAAIC,CAAC,GAAG,CAAC;EACT,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,GAAG,CAACG,MAAM,EAAEE,CAAC,EAAE,EAAE;IACjC,MAAMC,GAAG,GAAGN,GAAG,CAACK,CAAC,CAAC;IAClBJ,KAAK,CAACG,CAAC,EAAE,CAAC,GAAGE,GAAG,KAAK,EAAE;IACvBL,KAAK,CAACG,CAAC,EAAE,CAAC,GAAIE,GAAG,IAAI,EAAE,GAAI,IAAI;IAC/BL,KAAK,CAACG,CAAC,EAAE,CAAC,GAAIE,GAAG,IAAI,CAAC,GAAI,IAAI;IAC9BL,KAAK,CAACG,CAAC,EAAE,CAAC,GAAGE,GAAG,GAAG,IAAI;EAC3B;EACA,OAAOL,KAAK,CAACM,MAAM;AACvB;AACA;AACA;AACA;AACA,SAASV,OAAOA,CAACG,GAAG,EAAE;EAClB,OAAOA,GAAG,CAACO,MAAM;AACrB;AACA;AACA;AACA;AACA,SAAST,OAAOA,CAACU,EAAE,EAAE;EACjB,MAAMP,KAAK,GAAG,IAAIC,UAAU,CAACM,EAAE,CAAC;EAChC,MAAMR,GAAG,GAAG,IAAIS,WAAW,CAACR,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC;EAC7C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,KAAK,CAACE,MAAM,EAAEC,CAAC,IAAI,CAAC,EAAE;IACtCJ,GAAG,CAACI,CAAC,GAAG,CAAC,CAAC,GACLH,KAAK,CAACG,CAAC,CAAC,IAAI,EAAE,GACVH,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,EAAG,GACnBH,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAE,GACnBH,KAAK,CAACG,CAAC,GAAG,CAAC,CAAC;EACxB;EACA,OAAOJ,GAAG;AACd;AACA;AACA;AACA;AACA,SAASD,OAAOA,CAACS,EAAE,EAAE;EACjB,OAAO,IAAIC,WAAW,CAACD,EAAE,CAAC;AAC9B;AACAjB,OAAO,CAACI,WAAW,GAAG,IAAIO,UAAU,CAAC,IAAIO,WAAW,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI;AAC/ElB,OAAO,CAACG,IAAI,GAAGH,OAAO,CAACI,WAAW,GAAGE,OAAO,GAAGD,OAAO;AACtDL,OAAO,CAACE,IAAI,GAAGF,OAAO,CAACI,WAAW,GAAGI,OAAO,GAAGD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}