{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SenderGetter = void 0;\nconst api_1 = require(\"../api\");\nconst Helpers_1 = require(\"../../Helpers\");\nconst chatGetter_1 = require(\"./chatGetter\");\nconst inspect_1 = require(\"../../inspect\");\nclass SenderGetter extends chatGetter_1.ChatGetter {\n  [inspect_1.inspect.custom]() {\n    return (0, Helpers_1.betterConsoleLog)(this);\n  }\n  static initSenderClass(c, _ref) {\n    let {\n      senderId,\n      sender,\n      inputSender\n    } = _ref;\n    c._senderId = senderId;\n    c._sender = sender;\n    c._inputSender = inputSender;\n    c._client = undefined;\n  }\n  get sender() {\n    return this._sender;\n  }\n  async getSender() {\n    if (this._client && (!this._sender || this._sender instanceof api_1.Api.Channel && this._sender.min) && (await this.getInputSender())) {\n      try {\n        this._sender = await this._client.getEntity(this._inputSender);\n      } catch (e) {\n        await this._refetchSender();\n      }\n    }\n    return this._sender;\n  }\n  get inputSender() {\n    if (!this._inputSender && this._senderId && this._client) {\n      try {\n        this._inputSender = this._client._entityCache.get(this._senderId);\n      } catch (e) {}\n    }\n    return this._inputSender;\n  }\n  async getInputSender() {\n    if (!this.inputSender && this._senderId && this._client) {\n      await this._refetchSender();\n    }\n    return this._inputSender;\n  }\n  get senderId() {\n    return this._senderId;\n  }\n  async _refetchSender() {}\n}\nexports.SenderGetter = SenderGetter;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}