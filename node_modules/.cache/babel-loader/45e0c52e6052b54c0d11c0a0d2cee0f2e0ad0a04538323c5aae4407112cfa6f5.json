{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrick\\\\Documents\\\\telegram-media-downloader\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const connect = async () => {\n    try {\n      // Validate phone number\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) {\n        throw new Error('Invalid phone number format. Use +1234567890');\n      }\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false); // Reset verification state\n\n      const newClient = new TelegramClient(new StringSession(''), parseInt(apiId), apiHash, {\n        connectionRetries: 3\n      });\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          return new Promise(resolve => {\n            const interval = setInterval(() => {\n              if (code) {\n                clearInterval(interval);\n                resolve(code);\n              }\n            }, 500);\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Error: ${err.message}`,\n            type: 'error'\n          });\n        }\n      });\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Error: ${err.message}`,\n        type: 'error'\n      });\n    }\n  };\n  const verifyCode = async () => {\n    if (!code) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    setAuthStatus({\n      text: 'Verifying...',\n      type: 'loading'\n    });\n    setIsWaitingForCode(false);\n\n    // This will resolve the promise in the phoneCode callback\n    window.verificationPromiseResolve(code);\n  };\n  const fetchMedia = async () => {\n    if (!chatInput) return;\n    try {\n      setProgress(10);\n      const entity = await client.getInputEntity(chatInput);\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => ({\n        id: m.id,\n        type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n        filename: m.photo ? `photo_${m.id}.jpg` : m.video ? `video_${m.id}.mp4` : `file_${m.id}.dat`,\n        message: m\n      }));\n      setMediaItems(items);\n      setProgress(100);\n    } catch (err) {\n      setAuthStatus({\n        text: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n    }\n  };\n  const downloadFile = async mediaItem => {\n    try {\n      const buffer = await client.downloadMedia(mediaItem.message);\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      a.click();\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => client && setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API ID (from my.telegram.org)\",\n          value: apiId,\n          onChange: e => setApiId(e.target.value),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"API Hash\",\n          value: apiHash,\n          onChange: e => setApiHash(e.target.value),\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Phone (+1234567890)\",\n          value: phone,\n          onChange: e => setPhone(e.target.value),\n          type: \"tel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          children: \"Connect to Telegram\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }, this), authStatus.text.includes('verification') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Verification Code\",\n            value: code,\n            onChange: e => setCode(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 29\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Verification Code\",\n            value: code,\n            onChange: e => setCode(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Chat ID or @username\",\n            value: chatInput,\n            onChange: e => setChatInput(e.target.value),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            children: \"Fetch Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"media-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: [item.type === 'photo' ? '📷' : item.type === 'video' ? '🎥' : '📄', /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => downloadFile(item),\n              className: \"download-btn\",\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 41\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 37\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), progress > 0 && progress < 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Get your API ID and Hash from my.telegram.org\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: \"Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"wg3QUw4+DXMAbTIua5wou2kGnK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","connect","cleanPhone","trim","match","Error","newClient","parseInt","connectionRetries","start","phoneNumber","phoneCode","Promise","resolve","interval","setInterval","clearInterval","onError","err","message","verifyCode","window","verificationPromiseResolve","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","id","photo","video","filename","downloadFile","mediaItem","buffer","downloadMedia","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","placeholder","value","onChange","e","target","includes","length","item","style","width","_c","$RefreshReg$"],"sources":["C:/Users/Rodrick/Documents/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n    const [tab, setTab] = useState('auth');\n    const [apiId, setApiId] = useState('');\n    const [apiHash, setApiHash] = useState('');\n    const [phone, setPhone] = useState('');\n    const [code, setCode] = useState('');\n    const [client, setClient] = useState(null);\n    const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n    const [mediaItems, setMediaItems] = useState([]);\n    const [progress, setProgress] = useState(0);\n    const [chatInput, setChatInput] = useState('');\n    const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n\n    const connect = async () => {\n        try {\n            // Validate phone number\n            const cleanPhone = phone.trim();\n            if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) {\n                throw new Error('Invalid phone number format. Use +1234567890');\n            }\n\n            setAuthStatus({ text: 'Connecting...', type: 'loading' });\n            setIsWaitingForCode(false); // Reset verification state\n\n            const newClient = new TelegramClient(\n                new StringSession(''),\n                parseInt(apiId),\n                apiHash,\n                { connectionRetries: 3 }\n            );\n\n            await newClient.start({\n                phoneNumber: cleanPhone,\n                phoneCode: async () => {\n                    setAuthStatus({ text: 'Enter verification code sent to your phone', type: 'info' });\n                    return new Promise((resolve) => {\n                        const interval = setInterval(() => {\n                            if (code) {\n                                clearInterval(interval);\n                                resolve(code);\n                            }\n                        }, 500);\n                    });\n                },\n                onError: (err) => {\n                    setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n                },\n            });\n\n            setClient(newClient);\n            setAuthStatus({ text: 'Connected!', type: 'success' });\n            setTab('download');\n        } catch (err) {\n            setAuthStatus({ text: `Error: ${err.message}`, type: 'error' });\n        }\n    };\n\n    const verifyCode = async () => {\n    if (!code) {\n        setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n        return;\n    }\n    \n    setAuthStatus({ text: 'Verifying...', type: 'loading' });\n    setIsWaitingForCode(false);\n    \n    // This will resolve the promise in the phoneCode callback\n    window.verificationPromiseResolve(code);\n};\n\n    const fetchMedia = async () => {\n        if (!chatInput) return;\n        \n        try {\n            setProgress(10);\n            const entity = await client.getInputEntity(chatInput);\n            setProgress(50);\n            const messages = await client.getMessages(entity, { limit: 100 });\n            setProgress(80);\n\n            const items = messages\n                .filter(m => m.media)\n                .map(m => ({\n                    id: m.id,\n                    type: m.photo ? 'photo' : m.video ? 'video' : 'file',\n                    filename: m.photo ? `photo_${m.id}.jpg` :\n                        m.video ? `video_${m.id}.mp4` :\n                            `file_${m.id}.dat`,\n                    message: m\n                }));\n\n            setMediaItems(items);\n            setProgress(100);\n        } catch (err) {\n            setAuthStatus({ text: `Fetch error: ${err.message}`, type: 'error' });\n        }\n    };\n\n    const downloadFile = async (mediaItem) => {\n        try {\n            const buffer = await client.downloadMedia(mediaItem.message);\n            const blob = new Blob([buffer]);\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n            a.download = mediaItem.filename;\n            a.click();\n            URL.revokeObjectURL(url);\n        } catch (err) {\n            setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n        }\n    };\n\n    return (\n        <div className=\"App\">\n            <div className=\"tabs\">\n                <button \n                    onClick={() => setTab('auth')} \n                    className={`tab ${tab === 'auth' ? 'active' : ''}`}\n                >\n                    Authentication\n                </button>\n                <button \n                    onClick={() => client && setTab('download')} \n                    className={`tab ${tab === 'download' ? 'active' : ''}`}\n                    disabled={!client}\n                >\n                    Download Media\n                </button>\n                <button \n                    onClick={() => setTab('about')} \n                    className={`tab ${tab === 'about' ? 'active' : ''}`}\n                >\n                    About\n                </button>\n            </div>\n\n            <div className=\"tab-content\">\n                {tab === 'auth' && (\n                    <div className=\"auth-container\">\n                        <h2>Telegram Login</h2>\n                        <input\n                            placeholder=\"API ID (from my.telegram.org)\"\n                            value={apiId}\n                            onChange={(e) => setApiId(e.target.value)}\n                            type=\"text\"\n                        />\n                        <input\n                            placeholder=\"API Hash\"\n                            value={apiHash}\n                            onChange={(e) => setApiHash(e.target.value)}\n                            type=\"password\"\n                        />\n                        <input\n                            placeholder=\"Phone (+1234567890)\"\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value)}\n                            type=\"tel\"\n                        />\n                        <button onClick={connect} className=\"connect-btn\">\n                            Connect to Telegram\n                        </button>\n\n                        {authStatus.text && (\n                            <div className={`status ${authStatus.type}`}>\n                                {authStatus.text}\n                            </div>\n                        )}\n\n                        {authStatus.text.includes('verification') && (\n                            <div className=\"verification-container\">\n                                <input\n                                    placeholder=\"Verification Code\"\n                                    value={code}\n                                    onChange={(e) => setCode(e.target.value)}\n                                    type=\"text\"\n                                />\n                            </div>\n                        )}\n\n                        {isWaitingForCode && (\n                            <div className=\"verification-box\">\n                                <input\n                                    placeholder=\"Verification Code\"\n                                    value={code}\n                                    onChange={(e) => setCode(e.target.value)}\n                                    type=\"text\"\n                                />\n                                <button \n                                    onClick={verifyCode}\n                                    className=\"verify-btn\"\n                                >\n                                    Verify Code\n                                </button>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'download' && client && (\n                    <div className=\"download-container\">\n                        <h2>Download Media</h2>\n                        <div className=\"search-container\">\n                            <input\n                                placeholder=\"Chat ID or @username\"\n                                value={chatInput}\n                                onChange={(e) => setChatInput(e.target.value)}\n                                type=\"text\"\n                            />\n                            <button onClick={fetchMedia} className=\"fetch-btn\">\n                                Fetch Media\n                            </button>\n                        </div>\n                        \n                        <div className=\"media-grid\">\n                            {mediaItems.length > 0 ? (\n                                mediaItems.map(item => (\n                                    <div key={item.id} className=\"media-item\">\n                                        <div className=\"media-preview\">\n                                            {item.type === 'photo' ? '📷' : item.type === 'video' ? '🎥' : '📄'}\n                                            <span className=\"filename\">{item.filename}</span>\n                                        </div>\n                                        <button \n                                            onClick={() => downloadFile(item)}\n                                            className=\"download-btn\"\n                                        >\n                                            Download\n                                        </button>\n                                    </div>\n                                ))\n                            ) : (\n                                <div className=\"empty-state\">\n                                    {progress > 0 && progress < 100 ? (\n                                        'Loading media...'\n                                    ) : (\n                                        'No media found. Enter a chat ID and click \"Fetch Media\"'\n                                    )}\n                                </div>\n                            )}\n                        </div>\n                        \n                        {progress > 0 && progress < 100 && (\n                            <div className=\"progress-container\">\n                                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                                    {progress}%\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {tab === 'about' && (\n                    <div className=\"about-container\">\n                        <h2>About This App</h2>\n                        <p>This application allows you to download media from Telegram chats.</p>\n                        <h3>How to use:</h3>\n                        <ol>\n                            <li>Get your API ID and Hash from my.telegram.org</li>\n                            <li>Enter your credentials in the Authentication tab</li>\n                            <li>After connecting, go to Download Media tab</li>\n                            <li>Enter a chat ID or username to fetch media</li>\n                        </ol>\n                        <div className=\"disclaimer\">\n                            Note: This app runs entirely in your browser. Your credentials are not stored or sent to any server.\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,aAAa,QAAQ,mBAAmB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,MAAM,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,IAAI,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG9B,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAM+B,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACA;MACA,MAAMC,UAAU,GAAGnB,KAAK,CAACoB,IAAI,CAAC,CAAC;MAC/B,IAAI,CAACD,UAAU,CAACE,KAAK,CAAC,gBAAgB,CAAC,EAAE;QACrC,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;MACnE;MAEAf,aAAa,CAAC;QAAEC,IAAI,EAAE,eAAe;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;MACzDQ,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;;MAE5B,MAAMM,SAAS,GAAG,IAAInC,cAAc,CAChC,IAAIC,aAAa,CAAC,EAAE,CAAC,EACrBmC,QAAQ,CAAC5B,KAAK,CAAC,EACfE,OAAO,EACP;QAAE2B,iBAAiB,EAAE;MAAE,CAC3B,CAAC;MAED,MAAMF,SAAS,CAACG,KAAK,CAAC;QAClBC,WAAW,EAAER,UAAU;QACvBS,SAAS,EAAE,MAAAA,CAAA,KAAY;UACnBrB,aAAa,CAAC;YAAEC,IAAI,EAAE,4CAA4C;YAAEC,IAAI,EAAE;UAAO,CAAC,CAAC;UACnF,OAAO,IAAIoB,OAAO,CAAEC,OAAO,IAAK;YAC5B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;cAC/B,IAAI9B,IAAI,EAAE;gBACN+B,aAAa,CAACF,QAAQ,CAAC;gBACvBD,OAAO,CAAC5B,IAAI,CAAC;cACjB;YACJ,CAAC,EAAE,GAAG,CAAC;UACX,CAAC,CAAC;QACN,CAAC;QACDgC,OAAO,EAAGC,GAAG,IAAK;UACd5B,aAAa,CAAC;YAAEC,IAAI,EAAE,UAAU2B,GAAG,CAACC,OAAO,EAAE;YAAE3B,IAAI,EAAE;UAAQ,CAAC,CAAC;QACnE;MACJ,CAAC,CAAC;MAEFJ,SAAS,CAACkB,SAAS,CAAC;MACpBhB,aAAa,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEC,IAAI,EAAE;MAAU,CAAC,CAAC;MACtDd,MAAM,CAAC,UAAU,CAAC;IACtB,CAAC,CAAC,OAAOwC,GAAG,EAAE;MACV5B,aAAa,CAAC;QAAEC,IAAI,EAAE,UAAU2B,GAAG,CAACC,OAAO,EAAE;QAAE3B,IAAI,EAAE;MAAQ,CAAC,CAAC;IACnE;EACJ,CAAC;EAED,MAAM4B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACnC,IAAI,EAAE;MACPK,aAAa,CAAC;QAAEC,IAAI,EAAE,gCAAgC;QAAEC,IAAI,EAAE;MAAQ,CAAC,CAAC;MACxE;IACJ;IAEAF,aAAa,CAAC;MAAEC,IAAI,EAAE,cAAc;MAAEC,IAAI,EAAE;IAAU,CAAC,CAAC;IACxDQ,mBAAmB,CAAC,KAAK,CAAC;;IAE1B;IACAqB,MAAM,CAACC,0BAA0B,CAACrC,IAAI,CAAC;EAC3C,CAAC;EAEG,MAAMsC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI,CAAC1B,SAAS,EAAE;IAEhB,IAAI;MACAD,WAAW,CAAC,EAAE,CAAC;MACf,MAAM4B,MAAM,GAAG,MAAMrC,MAAM,CAACsC,cAAc,CAAC5B,SAAS,CAAC;MACrDD,WAAW,CAAC,EAAE,CAAC;MACf,MAAM8B,QAAQ,GAAG,MAAMvC,MAAM,CAACwC,WAAW,CAACH,MAAM,EAAE;QAAEI,KAAK,EAAE;MAAI,CAAC,CAAC;MACjEhC,WAAW,CAAC,EAAE,CAAC;MAEf,MAAMiC,KAAK,GAAGH,QAAQ,CACjBI,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAAC,CACpBC,GAAG,CAACF,CAAC,KAAK;QACPG,EAAE,EAAEH,CAAC,CAACG,EAAE;QACR1C,IAAI,EAAEuC,CAAC,CAACI,KAAK,GAAG,OAAO,GAAGJ,CAAC,CAACK,KAAK,GAAG,OAAO,GAAG,MAAM;QACpDC,QAAQ,EAAEN,CAAC,CAACI,KAAK,GAAG,SAASJ,CAAC,CAACG,EAAE,MAAM,GACnCH,CAAC,CAACK,KAAK,GAAG,SAASL,CAAC,CAACG,EAAE,MAAM,GACzB,QAAQH,CAAC,CAACG,EAAE,MAAM;QAC1Bf,OAAO,EAAEY;MACb,CAAC,CAAC,CAAC;MAEPrC,aAAa,CAACmC,KAAK,CAAC;MACpBjC,WAAW,CAAC,GAAG,CAAC;IACpB,CAAC,CAAC,OAAOsB,GAAG,EAAE;MACV5B,aAAa,CAAC;QAAEC,IAAI,EAAE,gBAAgB2B,GAAG,CAACC,OAAO,EAAE;QAAE3B,IAAI,EAAE;MAAQ,CAAC,CAAC;IACzE;EACJ,CAAC;EAED,MAAM8C,YAAY,GAAG,MAAOC,SAAS,IAAK;IACtC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMrD,MAAM,CAACsD,aAAa,CAACF,SAAS,CAACpB,OAAO,CAAC;MAC5D,MAAMuB,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACH,MAAM,CAAC,CAAC;MAC/B,MAAMI,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC;MACrC,MAAMK,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACrCF,CAAC,CAACG,IAAI,GAAGN,GAAG;MACZG,CAAC,CAACI,QAAQ,GAAGZ,SAAS,CAACF,QAAQ;MAC/BU,CAAC,CAACK,KAAK,CAAC,CAAC;MACTP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC;IAC5B,CAAC,CAAC,OAAO1B,GAAG,EAAE;MACV5B,aAAa,CAAC;QAAEC,IAAI,EAAE,oBAAoB2B,GAAG,CAACC,OAAO,EAAE;QAAE3B,IAAI,EAAE;MAAQ,CAAC,CAAC;IAC7E;EACJ,CAAC;EAED,oBACIlB,OAAA;IAAKgF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBjF,OAAA;MAAKgF,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBjF,OAAA;QACIkF,OAAO,EAAEA,CAAA,KAAM9E,MAAM,CAAC,MAAM,CAAE;QAC9B4E,SAAS,EAAE,OAAO7E,GAAG,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAA8E,QAAA,EACtD;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtF,OAAA;QACIkF,OAAO,EAAEA,CAAA,KAAMrE,MAAM,IAAIT,MAAM,CAAC,UAAU,CAAE;QAC5C4E,SAAS,EAAE,OAAO7E,GAAG,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;QACvDoF,QAAQ,EAAE,CAAC1E,MAAO;QAAAoE,QAAA,EACrB;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTtF,OAAA;QACIkF,OAAO,EAAEA,CAAA,KAAM9E,MAAM,CAAC,OAAO,CAAE;QAC/B4E,SAAS,EAAE,OAAO7E,GAAG,KAAK,OAAO,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAA8E,QAAA,EACvD;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENtF,OAAA;MAAKgF,SAAS,EAAC,aAAa;MAAAC,QAAA,GACvB9E,GAAG,KAAK,MAAM,iBACXH,OAAA;QAAKgF,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BjF,OAAA;UAAAiF,QAAA,EAAI;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBtF,OAAA;UACIwF,WAAW,EAAC,+BAA+B;UAC3CC,KAAK,EAAEpF,KAAM;UACbqF,QAAQ,EAAGC,CAAC,IAAKrF,QAAQ,CAACqF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CvE,IAAI,EAAC;QAAM;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACFtF,OAAA;UACIwF,WAAW,EAAC,UAAU;UACtBC,KAAK,EAAElF,OAAQ;UACfmF,QAAQ,EAAGC,CAAC,IAAKnF,UAAU,CAACmF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC5CvE,IAAI,EAAC;QAAU;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB,CAAC,eACFtF,OAAA;UACIwF,WAAW,EAAC,qBAAqB;UACjCC,KAAK,EAAEhF,KAAM;UACbiF,QAAQ,EAAGC,CAAC,IAAKjF,QAAQ,CAACiF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CvE,IAAI,EAAC;QAAK;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,eACFtF,OAAA;UAAQkF,OAAO,EAAEvD,OAAQ;UAACqD,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAElD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAERvE,UAAU,CAACE,IAAI,iBACZjB,OAAA;UAAKgF,SAAS,EAAE,UAAUjE,UAAU,CAACG,IAAI,EAAG;UAAA+D,QAAA,EACvClE,UAAU,CAACE;QAAI;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACf,CACR,EAEAvE,UAAU,CAACE,IAAI,CAAC4E,QAAQ,CAAC,cAAc,CAAC,iBACrC7F,OAAA;UAAKgF,SAAS,EAAC,wBAAwB;UAAAC,QAAA,eACnCjF,OAAA;YACIwF,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAE9E,IAAK;YACZ+E,QAAQ,EAAGC,CAAC,IAAK/E,OAAO,CAAC+E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCvE,IAAI,EAAC;UAAM;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR,EAEA7D,gBAAgB,iBACbzB,OAAA;UAAKgF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BjF,OAAA;YACIwF,WAAW,EAAC,mBAAmB;YAC/BC,KAAK,EAAE9E,IAAK;YACZ+E,QAAQ,EAAGC,CAAC,IAAK/E,OAAO,CAAC+E,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YACzCvE,IAAI,EAAC;UAAM;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACFtF,OAAA;YACIkF,OAAO,EAAEpC,UAAW;YACpBkC,SAAS,EAAC,YAAY;YAAAC,QAAA,EACzB;UAED;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnF,GAAG,KAAK,UAAU,IAAIU,MAAM,iBACzBb,OAAA;QAAKgF,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BjF,OAAA;UAAAiF,QAAA,EAAI;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBtF,OAAA;UAAKgF,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BjF,OAAA;YACIwF,WAAW,EAAC,sBAAsB;YAClCC,KAAK,EAAElE,SAAU;YACjBmE,QAAQ,EAAGC,CAAC,IAAKnE,YAAY,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAC9CvE,IAAI,EAAC;UAAM;YAAAiE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC,eACFtF,OAAA;YAAQkF,OAAO,EAAEjC,UAAW;YAAC+B,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAEnD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAENtF,OAAA;UAAKgF,SAAS,EAAC,YAAY;UAAAC,QAAA,EACtB9D,UAAU,CAAC2E,MAAM,GAAG,CAAC,GAClB3E,UAAU,CAACwC,GAAG,CAACoC,IAAI,iBACf/F,OAAA;YAAmBgF,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACrCjF,OAAA;cAAKgF,SAAS,EAAC,eAAe;cAAAC,QAAA,GACzBc,IAAI,CAAC7E,IAAI,KAAK,OAAO,GAAG,IAAI,GAAG6E,IAAI,CAAC7E,IAAI,KAAK,OAAO,GAAG,IAAI,GAAG,IAAI,eACnElB,OAAA;gBAAMgF,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAEc,IAAI,CAAChC;cAAQ;gBAAAoB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChD,CAAC,eACNtF,OAAA;cACIkF,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC+B,IAAI,CAAE;cAClCf,SAAS,EAAC,cAAc;cAAAC,QAAA,EAC3B;YAED;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAVHS,IAAI,CAACnC,EAAE;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWZ,CACR,CAAC,gBAEFtF,OAAA;YAAKgF,SAAS,EAAC,aAAa;YAAAC,QAAA,EACvB5D,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,GAAG,GAC3B,kBAAkB,GAElB;UACH;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QACR;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,EAELjE,QAAQ,GAAG,CAAC,IAAIA,QAAQ,GAAG,GAAG,iBAC3BrB,OAAA;UAAKgF,SAAS,EAAC,oBAAoB;UAAAC,QAAA,eAC/BjF,OAAA;YAAKgF,SAAS,EAAC,cAAc;YAACgB,KAAK,EAAE;cAAEC,KAAK,EAAE,GAAG5E,QAAQ;YAAI,CAAE;YAAA4D,QAAA,GAC1D5D,QAAQ,EAAC,GACd;UAAA;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACR,EAEAnF,GAAG,KAAK,OAAO,iBACZH,OAAA;QAAKgF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BjF,OAAA;UAAAiF,QAAA,EAAI;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvBtF,OAAA;UAAAiF,QAAA,EAAG;QAAkE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzEtF,OAAA;UAAAiF,QAAA,EAAI;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpBtF,OAAA;UAAAiF,QAAA,gBACIjF,OAAA;YAAAiF,QAAA,EAAI;UAA6C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtDtF,OAAA;YAAAiF,QAAA,EAAI;UAAgD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzDtF,OAAA;YAAAiF,QAAA,EAAI;UAA0C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnDtF,OAAA;YAAAiF,QAAA,EAAI;UAA0C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACLtF,OAAA;UAAKgF,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAE5B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACpF,EAAA,CA9QQD,GAAG;AAAAiG,EAAA,GAAHjG,GAAG;AAgRZ,eAAeA,GAAG;AAAC,IAAAiG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}