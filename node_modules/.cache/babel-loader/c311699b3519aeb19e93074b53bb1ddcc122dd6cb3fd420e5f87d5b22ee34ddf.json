{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rpcErrorRe = exports.MsgWaitError = exports.EmailUnconfirmedError = exports.NetworkMigrateError = exports.FileMigrateError = exports.FloodTestPhoneWaitError = exports.FloodWaitError = exports.SlowModeWaitError = exports.PhoneMigrateError = exports.UserMigrateError = void 0;\nconst RPCBaseErrors_1 = require(\"./RPCBaseErrors\");\nclass UserMigrateError extends RPCBaseErrors_1.InvalidDCError {\n  constructor(args) {\n    const newDc = Number(args.capture || 0);\n    super(`The user whose identity is being used to execute queries is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `The user whose identity is being used to execute queries is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.newDc = newDc;\n  }\n}\nexports.UserMigrateError = UserMigrateError;\nclass PhoneMigrateError extends RPCBaseErrors_1.InvalidDCError {\n  constructor(args) {\n    const newDc = Number(args.capture || 0);\n    super(`The phone number a user is trying to use for authorization is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `The phone number a user is trying to use for authorization is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.newDc = newDc;\n  }\n}\nexports.PhoneMigrateError = PhoneMigrateError;\nclass SlowModeWaitError extends RPCBaseErrors_1.FloodError {\n  constructor(args) {\n    const seconds = Number(args.capture || 0);\n    super(`A wait of ${seconds} seconds is required before sending another message in this chat` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `A wait of ${seconds} seconds is required before sending another message in this chat` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.seconds = seconds;\n  }\n}\nexports.SlowModeWaitError = SlowModeWaitError;\nclass FloodWaitError extends RPCBaseErrors_1.FloodError {\n  constructor(args) {\n    const seconds = Number(args.capture || 0);\n    super(`A wait of ${seconds} seconds is required` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `A wait of ${seconds} seconds is required` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.seconds = seconds;\n  }\n}\nexports.FloodWaitError = FloodWaitError;\nclass FloodTestPhoneWaitError extends RPCBaseErrors_1.FloodError {\n  constructor(args) {\n    const seconds = Number(args.capture || 0);\n    super(`A wait of ${seconds} seconds is required in the test servers` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `A wait of ${seconds} seconds is required in the test servers` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.seconds = seconds;\n  }\n}\nexports.FloodTestPhoneWaitError = FloodTestPhoneWaitError;\nclass FileMigrateError extends RPCBaseErrors_1.InvalidDCError {\n  constructor(args) {\n    const newDc = Number(args.capture || 0);\n    super(`The file to be accessed is currently stored in DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `The file to be accessed is currently stored in DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.newDc = newDc;\n  }\n}\nexports.FileMigrateError = FileMigrateError;\nclass NetworkMigrateError extends RPCBaseErrors_1.InvalidDCError {\n  constructor(args) {\n    const newDc = Number(args.capture || 0);\n    super(`The source IP address is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request), args.request);\n    this.message = `The source IP address is associated with DC ${newDc}` + RPCBaseErrors_1.RPCError._fmtRequest(args.request);\n    this.newDc = newDc;\n  }\n}\nexports.NetworkMigrateError = NetworkMigrateError;\nclass EmailUnconfirmedError extends RPCBaseErrors_1.BadRequestError {\n  constructor(args) {\n    const codeLength = Number(args.capture || 0);\n    super(`Email unconfirmed, the length of the code must be ${codeLength}${RPCBaseErrors_1.RPCError._fmtRequest(args.request)}`, args.request, 400);\n    // eslint-disable-next-line max-len\n    this.message = `Email unconfirmed, the length of the code must be ${codeLength}${RPCBaseErrors_1.RPCError._fmtRequest(args.request)}`;\n    this.codeLength = codeLength;\n  }\n}\nexports.EmailUnconfirmedError = EmailUnconfirmedError;\nclass MsgWaitError extends RPCBaseErrors_1.FloodError {\n  constructor(args) {\n    super(`Message failed to be sent.${RPCBaseErrors_1.RPCError._fmtRequest(args.request)}`, args.request);\n    this.message = `Message failed to be sent.${RPCBaseErrors_1.RPCError._fmtRequest(args.request)}`;\n  }\n}\nexports.MsgWaitError = MsgWaitError;\nexports.rpcErrorRe = new Map([[/FILE_MIGRATE_(\\d+)/, FileMigrateError], [/FLOOD_TEST_PHONE_WAIT_(\\d+)/, FloodTestPhoneWaitError], [/FLOOD_WAIT_(\\d+)/, FloodWaitError], [/FLOOD_PREMIUM_WAIT_(\\d+)/, FloodWaitError], [/MSG_WAIT_(.*)/, MsgWaitError], [/PHONE_MIGRATE_(\\d+)/, PhoneMigrateError], [/SLOWMODE_WAIT_(\\d+)/, SlowModeWaitError], [/USER_MIGRATE_(\\d+)/, UserMigrateError], [/NETWORK_MIGRATE_(\\d+)/, NetworkMigrateError], [/EMAIL_UNCONFIRMED_(\\d+)/, EmailUnconfirmedError]]);","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}