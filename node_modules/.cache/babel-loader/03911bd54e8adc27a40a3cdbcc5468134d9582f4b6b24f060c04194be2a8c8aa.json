{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InlineResult = void 0;\nconst api_1 = require(\"../api\");\nconst Helpers_1 = require(\"../../Helpers\");\nconst inspect_1 = require(\"../../inspect\");\nconst Utils_1 = require(\"../../Utils\");\nclass InlineResult {\n  [inspect_1.inspect.custom]() {\n    return (0, Helpers_1.betterConsoleLog)(this);\n  }\n  constructor(client, original, queryId, entity) {\n    this._ARTICLE = \"article\";\n    this._PHOTO = \"photo\";\n    this._GIF = \"gif\";\n    this._VIDEO = \"video\";\n    this._VIDEO_GIF = \"mpeg4_gif\";\n    this._AUDIO = \"audio\";\n    this._DOCUMENT = \"document\";\n    this._LOCATION = \"location\";\n    this._VENUE = \"venue\";\n    this._CONTACT = \"contact\";\n    this._GAME = \"game\";\n    this._client = client;\n    this.result = original;\n    this._queryId = queryId;\n    this._entity = entity;\n  }\n  get type() {\n    return this.result.type;\n  }\n  get message() {\n    return this.result.sendMessage;\n  }\n  get description() {\n    return this.result.description;\n  }\n  get url() {\n    if (this.result instanceof api_1.Api.BotInlineResult) {\n      return this.result.url;\n    }\n  }\n  get photo() {\n    if (this.result instanceof api_1.Api.BotInlineResult) {\n      return this.result.thumb;\n    } else {\n      return this.result.photo;\n    }\n  }\n  get document() {\n    if (this.result instanceof api_1.Api.BotInlineResult) {\n      return this.result.content;\n    } else {\n      return this.result.document;\n    }\n  }\n  async click(entity, replyTo) {\n    let silent = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let clearDraft = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let hideVia = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    if (entity) {\n      entity = await this._client.getInputEntity(entity);\n    } else if (this._entity) {\n      entity = this._entity;\n    } else {\n      throw new Error(\"You must provide the entity where the result should be sent to\");\n    }\n    let replyObject = undefined;\n    if (replyTo != undefined) {\n      replyObject = new api_1.Api.InputReplyToMessage({\n        replyToMsgId: (0, Utils_1.getMessageId)(replyTo)\n      });\n    }\n    const request = new api_1.Api.messages.SendInlineBotResult({\n      peer: entity,\n      queryId: this._queryId,\n      id: this.result.id,\n      silent: silent,\n      clearDraft: clearDraft,\n      hideVia: hideVia,\n      replyTo: replyObject\n    });\n    return await this._client.invoke(request);\n  }\n}\nexports.InlineResult = InlineResult;","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}