{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // ... (previous state declarations remain the same)\n  const [currentDownloadUrl, setCurrentDownloadUrl] = useState('');\n\n  // ... (other functions remain the same until downloadFile)\n\n  const downloadFile = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      var _mediaItem$message$me, _mediaItem$message$me2, _mediaItem$message$me3;\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Preparing download for ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n\n      // 1. Get file reference\n      const file = await client.invoke({\n        _: 'upload.getFile',\n        location: mediaItem.message.media.document || mediaItem.message.media.photo,\n        offset: 0,\n        limit: 1024 * 1024\n      });\n\n      // 2. Construct direct download URL\n      const dcId = file.dc_id;\n      const fileId = file.id;\n      const accessHash = ((_mediaItem$message$me = mediaItem.message.media.document) === null || _mediaItem$message$me === void 0 ? void 0 : _mediaItem$message$me.accessHash) || ((_mediaItem$message$me2 = mediaItem.message.media.photo) === null || _mediaItem$message$me2 === void 0 ? void 0 : _mediaItem$message$me2.accessHash);\n      const size = ((_mediaItem$message$me3 = mediaItem.message.media.document) === null || _mediaItem$message$me3 === void 0 ? void 0 : _mediaItem$message$me3.size) || 0;\n      const downloadUrl = `https://api.telegram.org/file/bot${client.session.dcId}/${dcId}/${fileId}?access_hash=${accessHash}&size=${size}`;\n      setCurrentDownloadUrl(downloadUrl);\n\n      // 3. Force browser download\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n\n      // 4. Cleanup\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(downloadUrl);\n      }, 100);\n      setAuthStatus({\n        text: 'Download started in browser! Check your downloads folder.',\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Direct download failed: ${err.message}. Trying alternative method...`,\n        type: 'warning'\n      });\n      await fallbackDownload(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // ... (rest of the component remains the same)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"download-container\",\n      children: authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status ${authStatus.type}`,\n        children: [authStatus.text, authStatus.type === 'warning' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"download-notice\",\n          children: [\"Pop-up blocked? Try allowing pop-ups for this site or\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: currentDownloadUrl,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \" click here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zWm5e4EUNpGXlPj2EbYuFP+om3s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","currentDownloadUrl","setCurrentDownloadUrl","downloadFile","mediaItem","client","message","media","_mediaItem$message$me","_mediaItem$message$me2","_mediaItem$message$me3","setIsDownloading","setAuthStatus","text","filename","type","file","invoke","_","location","document","photo","offset","limit","dcId","dc_id","fileId","id","accessHash","size","downloadUrl","session","a","createElement","href","download","style","display","body","appendChild","click","setTimeout","removeChild","window","URL","revokeObjectURL","err","fallbackDownload","className","children","tab","authStatus","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n  // ... (previous state declarations remain the same)\n  const [currentDownloadUrl, setCurrentDownloadUrl] = useState('');\n\n  // ... (other functions remain the same until downloadFile)\n\n  const downloadFile = async (mediaItem) => {\n    if (!client || !mediaItem.message.media) return;\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Preparing download for ${mediaItem.filename}...`, type: 'loading' });\n\n      // 1. Get file reference\n      const file = await client.invoke({\n        _: 'upload.getFile',\n        location: mediaItem.message.media.document || mediaItem.message.media.photo,\n        offset: 0,\n        limit: 1024 * 1024\n      });\n\n      // 2. Construct direct download URL\n      const dcId = file.dc_id;\n      const fileId = file.id;\n      const accessHash = mediaItem.message.media.document?.accessHash || mediaItem.message.media.photo?.accessHash;\n      const size = mediaItem.message.media.document?.size || 0;\n      \n      const downloadUrl = `https://api.telegram.org/file/bot${client.session.dcId}/${dcId}/${fileId}?access_hash=${accessHash}&size=${size}`;\n      setCurrentDownloadUrl(downloadUrl);\n\n      // 3. Force browser download\n      const a = document.createElement('a');\n      a.href = downloadUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      \n      // 4. Cleanup\n      setTimeout(() => {\n        document.body.removeChild(a);\n        window.URL.revokeObjectURL(downloadUrl);\n      }, 100);\n\n      setAuthStatus({ \n        text: 'Download started in browser! Check your downloads folder.', \n        type: 'success' \n      });\n    } catch (err) {\n      setAuthStatus({ \n        text: `Direct download failed: ${err.message}. Trying alternative method...`, \n        type: 'warning' \n      });\n      await fallbackDownload(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  // ... (rest of the component remains the same)\n\n  return (\n    <div className=\"App\">\n      {/* ... (previous JSX remains the same) */}\n      \n      {tab === 'download' && client && (\n        <div className=\"download-container\">\n          {/* ... (other JSX remains the same) */}\n          {authStatus.text && (\n            <div className={`status ${authStatus.type}`}>\n              {authStatus.text}\n              {authStatus.type === 'warning' && (\n                <div className=\"download-notice\">\n                  Pop-up blocked? Try allowing pop-ups for this site or \n                  <a href={currentDownloadUrl} target=\"_blank\" rel=\"noopener noreferrer\"> click here</a>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}