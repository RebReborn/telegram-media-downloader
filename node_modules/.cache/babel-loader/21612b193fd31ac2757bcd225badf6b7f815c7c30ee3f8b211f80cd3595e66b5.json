{"ast":null,"code":"var _jsxFileName = \"/workspaces/telegram-media-downloader/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({\n    text: '',\n    type: ''\n  });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n  const connect = async () => {\n    try {\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n      setAuthStatus({\n        text: 'Connecting...',\n        type: 'loading'\n      });\n      setIsWaitingForCode(false);\n      setCode('');\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(new StringSession(savedSession), parseInt(apiId), apiHash, {\n        connectionRetries: 3,\n        baseLogger: console,\n        useWSS: true,\n        downloadWorkers: 4,\n        uploadWorkers: 2\n      });\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({\n            text: 'Enter verification code sent to your phone',\n            type: 'info'\n          });\n          setIsWaitingForCode(true);\n          return new Promise(resolve => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: err => {\n          setAuthStatus({\n            text: `Authentication error: ${err.message}`,\n            type: 'error'\n          });\n          setIsWaitingForCode(false);\n        }\n      });\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({\n        text: 'Connected successfully!',\n        type: 'success'\n      });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({\n        text: `Connection error: ${err.message}`,\n        type: 'error'\n      });\n      setIsWaitingForCode(false);\n    }\n  };\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({\n        text: 'Please enter verification code',\n        type: 'error'\n      });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({\n        text: 'Verifying...',\n        type: 'loading'\n      });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({\n        text: 'Verification failed. Try connecting again.',\n        type: 'error'\n      });\n    }\n  };\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({\n        text: 'Please connect and enter a chat ID/username',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setProgress(10);\n      setAuthStatus({\n        text: 'Fetching media...',\n        type: 'loading'\n      });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, {\n        limit: 100\n      });\n      setProgress(80);\n      const items = messages.filter(m => m.media).map(m => {\n        var _m$media$document;\n        let filename = 'unknown';\n        let fileType = 'file';\n        if (m.photo) {\n          filename = `photo_${m.id}.jpg`;\n          fileType = 'photo';\n        } else if (m.video) {\n          filename = `video_${m.id}.mp4`;\n          fileType = 'video';\n        } else if (m.document) {\n          const fileAttr = m.document.attributes.find(attr => attr.className === 'DocumentAttributeFilename');\n          filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n          fileType = m.document.mimeType || 'file';\n        }\n        return {\n          id: m.id,\n          type: fileType,\n          filename,\n          message: m,\n          size: ((_m$media$document = m.media.document) === null || _m$media$document === void 0 ? void 0 : _m$media$document.size) || 0,\n          date: new Date(m.date * 1000).toLocaleString()\n        };\n      });\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({\n        text: `Found ${items.length} media items`,\n        type: 'success'\n      });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({\n        text: `Fetch error: ${err.message}`,\n        type: 'error'\n      });\n      setProgress(0);\n    }\n  };\n  const generateDirectDownloadLink = async mediaItem => {\n    if (!client || !mediaItem.message.media) return;\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Preparing download for ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n\n      // Get file reference instead of buffer\n      const file = await client.downloadMedia(mediaItem.message.media, {\n        workers: 4\n      }, false);\n\n      // Get direct download link\n      const fileUrl = await client.getDownloadLink(file);\n\n      // Create hidden anchor tag\n      const a = document.createElement('a');\n      a.href = fileUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      setAuthStatus({\n        text: 'Download started in browser. Check your downloads folder.',\n        type: 'success'\n      });\n    } catch (err) {\n      // Fallback to buffer method if direct download fails\n      await downloadThroughApp(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  const downloadThroughApp = async mediaItem => {\n    try {\n      setAuthStatus({\n        text: `Downloading ${mediaItem.filename}...`,\n        type: 'loading'\n      });\n      setProgress(0);\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          const percentage = Math.round(received / total * 100);\n          setProgress(percentage);\n        }\n      });\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n      setAuthStatus({\n        text: `${mediaItem.filename} downloaded!`,\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setProgress(0);\n    }\n  };\n  const downloadFile = async mediaItem => {\n    try {\n      await generateDirectDownloadLink(mediaItem);\n    } catch {\n      await downloadThroughApp(mediaItem);\n    }\n  };\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({\n        text: 'Please select files to download',\n        type: 'error'\n      });\n      return;\n    }\n    try {\n      setIsDownloading(true);\n      setAuthStatus({\n        text: `Preparing ${selectedItems.size} downloads...`,\n        type: 'loading'\n      });\n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) {\n          await downloadFile(item);\n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n      }\n      setAuthStatus({\n        text: `Started ${selectedItems.size} downloads!`,\n        type: 'success'\n      });\n    } catch (err) {\n      setAuthStatus({\n        text: `Batch download failed: ${err.message}`,\n        type: 'error'\n      });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n  const toggleItemSelection = id => {\n    const newSelected = new Set(selectedItems);\n    if (newSelected.has(id)) {\n      newSelected.delete(id);\n    } else {\n      newSelected.add(id);\n    }\n    setSelectedItems(newSelected);\n  };\n  const selectAllItems = () => {\n    if (selectedItems.size === mediaItems.length) {\n      setSelectedItems(new Set());\n    } else {\n      setSelectedItems(new Set(mediaItems.map(item => item.id)));\n    }\n  };\n  const formatFileSize = bytes => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({\n      text: 'Disconnected',\n      type: 'info'\n    });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Telegram Media Downloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), client && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: disconnect,\n        className: \"disconnect-btn\",\n        children: \"Disconnect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('auth'),\n        className: `tab ${tab === 'auth' ? 'active' : ''}`,\n        children: \"Authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('download'),\n        className: `tab ${tab === 'download' ? 'active' : ''}`,\n        disabled: !client,\n        children: \"Download Media\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setTab('about'),\n        className: `tab ${tab === 'about' ? 'active' : ''}`,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [tab === 'auth' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Telegram Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiId\",\n            children: \"API ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiId\",\n            placeholder: \"API ID (from my.telegram.org)\",\n            value: apiId,\n            onChange: e => setApiId(e.target.value.trim()),\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"apiHash\",\n            children: \"API Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"apiHash\",\n            placeholder: \"API Hash\",\n            value: apiHash,\n            onChange: e => setApiHash(e.target.value.trim()),\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"phone\",\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"phone\",\n            placeholder: \"Phone (+1234567890)\",\n            value: phone,\n            onChange: e => setPhone(e.target.value.trim()),\n            type: \"tel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: connect,\n          className: \"connect-btn\",\n          disabled: isWaitingForCode,\n          children: isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), isWaitingForCode && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"verification-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"code\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"code\",\n              placeholder: \"Verification Code\",\n              value: code,\n              onChange: e => setCode(e.target.value.trim()),\n              type: \"text\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: verifyCode,\n            className: \"verify-btn\",\n            disabled: !code.trim(),\n            children: \"Verify Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this), tab === 'download' && client && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Download Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"chatInput\",\n              children: \"Chat ID or @username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"chatInput\",\n              placeholder: \"Chat ID or @username\",\n              value: chatInput,\n              onChange: e => setChatInput(e.target.value),\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: fetchMedia,\n            className: \"fetch-btn\",\n            disabled: progress > 0 && progress < 100,\n            children: progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this), mediaItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: selectAllItems,\n            className: \"select-all-btn\",\n            children: selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: downloadSelected,\n            className: \"download-selected-btn\",\n            disabled: selectedItems.size === 0 || isDownloading,\n            children: [\"Download Selected (\", selectedItems.size, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"media-grid\",\n          children: mediaItems.length > 0 ? mediaItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `media-item ${selectedItems.has(item.id) ? 'selected' : ''}`,\n            onClick: () => toggleItemSelection(item.id),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-preview\",\n              children: item.type.includes('image') ? '📷' : item.type.includes('video') ? '🎥' : '📄'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"media-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"filename\",\n                title: item.filename,\n                children: item.filename\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-size\",\n                children: formatFileSize(item.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"file-date\",\n                children: item.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                downloadFile(item);\n              },\n              className: \"download-btn\",\n              disabled: isDownloading,\n              children: \"Download\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 19\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: progress > 0 && progress < 100 ? 'Loading media...' : 'No media found. Enter a chat ID and click \"Fetch Media\"'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), progress > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${progress}%`\n            },\n            children: [progress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this), authStatus.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status ${authStatus.type}`,\n          children: authStatus.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), tab === 'about' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"About This App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This application allows you to download media from Telegram chats.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How to use:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Get your API ID and Hash from \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://my.telegram.org\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: \"my.telegram.org\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter your credentials in the Authentication tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"After connecting, go to the Download Media tab\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Enter a chat ID or username to fetch media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Select and download the files you want\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disclaimer\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Note:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 15\n          }, this), \" This app runs entirely in your browser. Your credentials are not stored or sent to any server. All data remains on your device.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"version-info\",\n          children: \"Version 1.1.0 | Using Telegram Client API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WMYvQULB+AOG/dxd55v9Z43nFK4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","TelegramClient","StringSession","jsxDEV","_jsxDEV","App","_s","tab","setTab","apiId","setApiId","apiHash","setApiHash","phone","setPhone","code","setCode","client","setClient","authStatus","setAuthStatus","text","type","mediaItems","setMediaItems","progress","setProgress","chatInput","setChatInput","isWaitingForCode","setIsWaitingForCode","isDownloading","setIsDownloading","selectedItems","setSelectedItems","Set","verificationResolver","current","disconnect","connect","match","Error","cleanPhone","trim","sessionKey","savedSession","localStorage","getItem","newClient","parseInt","connectionRetries","baseLogger","console","useWSS","downloadWorkers","uploadWorkers","start","phoneNumber","phoneCode","Promise","resolve","onError","err","message","session","save","setItem","verifyCode","fetchMedia","entity","getInputEntity","messages","getMessages","limit","items","filter","m","media","map","_m$media$document","filename","fileType","photo","id","video","document","fileAttr","attributes","find","attr","className","fileName","mimeType","size","date","Date","toLocaleString","length","setTimeout","generateDirectDownloadLink","mediaItem","file","downloadMedia","workers","fileUrl","getDownloadLink","a","createElement","href","download","style","display","body","appendChild","click","removeChild","downloadThroughApp","buffer","progressCallback","received","total","percentage","Math","round","blob","Blob","url","URL","createObjectURL","revokeObjectURL","downloadFile","downloadSelected","item","toggleItemSelection","newSelected","has","delete","add","selectAllItems","formatFileSize","bytes","k","sizes","i","floor","log","parseFloat","pow","toFixed","removeItem","children","_jsxFileName","lineNumber","columnNumber","onClick","disabled","htmlFor","placeholder","value","onChange","e","target","autoFocus","includes","title","stopPropagation","width","rel","_c","$RefreshReg$"],"sources":["/workspaces/telegram-media-downloader/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { TelegramClient } from 'telegram';\nimport { StringSession } from 'telegram/sessions';\nimport './App.css';\n\nfunction App() {\n  const [tab, setTab] = useState('auth');\n  const [apiId, setApiId] = useState('');\n  const [apiHash, setApiHash] = useState('');\n  const [phone, setPhone] = useState('');\n  const [code, setCode] = useState('');\n  const [client, setClient] = useState(null);\n  const [authStatus, setAuthStatus] = useState({ text: '', type: '' });\n  const [mediaItems, setMediaItems] = useState([]);\n  const [progress, setProgress] = useState(0);\n  const [chatInput, setChatInput] = useState('');\n  const [isWaitingForCode, setIsWaitingForCode] = useState(false);\n  const [isDownloading, setIsDownloading] = useState(false);\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const verificationResolver = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      verificationResolver.current = null;\n      if (client) {\n        client.disconnect();\n      }\n    };\n  }, [client]);\n\n  const connect = async () => {\n    try {\n      if (!apiId.match(/^\\d+$/)) throw new Error('API ID must be numeric');\n      if (!apiHash.match(/^[a-f0-9]{32}$/i)) throw new Error('Invalid API Hash format');\n      const cleanPhone = phone.trim();\n      if (!cleanPhone.match(/^\\+?\\d{10,15}$/)) throw new Error('Invalid phone number format');\n\n      setAuthStatus({ text: 'Connecting...', type: 'loading' });\n      setIsWaitingForCode(false);\n      setCode('');\n\n      const sessionKey = 'telegramSession';\n      const savedSession = localStorage.getItem(sessionKey) || '';\n      const newClient = new TelegramClient(\n        new StringSession(savedSession),\n        parseInt(apiId),\n        apiHash,\n        { \n          connectionRetries: 3,\n          baseLogger: console,\n          useWSS: true,\n          downloadWorkers: 4,\n          uploadWorkers: 2\n        }\n      );\n\n      await newClient.connect();\n      await newClient.start({\n        phoneNumber: cleanPhone,\n        phoneCode: async () => {\n          setAuthStatus({ text: 'Enter verification code sent to your phone', type: 'info' });\n          setIsWaitingForCode(true);\n          return new Promise((resolve) => {\n            verificationResolver.current = resolve;\n          });\n        },\n        onError: (err) => {\n          setAuthStatus({ text: `Authentication error: ${err.message}`, type: 'error' });\n          setIsWaitingForCode(false);\n        },\n      });\n\n      const session = newClient.session.save();\n      localStorage.setItem(sessionKey, session);\n      setClient(newClient);\n      setAuthStatus({ text: 'Connected successfully!', type: 'success' });\n      setTab('download');\n    } catch (err) {\n      setAuthStatus({ text: `Connection error: ${err.message}`, type: 'error' });\n      setIsWaitingForCode(false);\n    }\n  };\n\n  const verifyCode = () => {\n    if (!code.trim()) {\n      setAuthStatus({ text: 'Please enter verification code', type: 'error' });\n      return;\n    }\n    if (verificationResolver.current) {\n      setAuthStatus({ text: 'Verifying...', type: 'loading' });\n      verificationResolver.current(code);\n      verificationResolver.current = null;\n      setIsWaitingForCode(false);\n    } else {\n      setAuthStatus({ text: 'Verification failed. Try connecting again.', type: 'error' });\n    }\n  };\n\n  const fetchMedia = async () => {\n    if (!chatInput.trim() || !client) {\n      setAuthStatus({ text: 'Please connect and enter a chat ID/username', type: 'error' });\n      return;\n    }\n\n    try {\n      setProgress(10);\n      setAuthStatus({ text: 'Fetching media...', type: 'loading' });\n      const entity = await client.getInputEntity(chatInput.trim());\n      setProgress(50);\n      const messages = await client.getMessages(entity, { limit: 100 });\n      setProgress(80);\n\n      const items = messages\n        .filter((m) => m.media)\n        .map((m) => {\n          let filename = 'unknown';\n          let fileType = 'file';\n          \n          if (m.photo) {\n            filename = `photo_${m.id}.jpg`;\n            fileType = 'photo';\n          } else if (m.video) {\n            filename = `video_${m.id}.mp4`;\n            fileType = 'video';\n          } else if (m.document) {\n            const fileAttr = m.document.attributes.find((attr) => attr.className === 'DocumentAttributeFilename');\n            filename = fileAttr ? fileAttr.fileName : `file_${m.id}`;\n            fileType = m.document.mimeType || 'file';\n          }\n          return {\n            id: m.id,\n            type: fileType,\n            filename,\n            message: m,\n            size: m.media.document?.size || 0,\n            date: new Date(m.date * 1000).toLocaleString(),\n          };\n        });\n\n      setMediaItems(items);\n      setProgress(100);\n      setAuthStatus({ text: `Found ${items.length} media items`, type: 'success' });\n      setTimeout(() => setProgress(0), 1000);\n    } catch (err) {\n      setAuthStatus({ text: `Fetch error: ${err.message}`, type: 'error' });\n      setProgress(0);\n    }\n  };\n\n  const generateDirectDownloadLink = async (mediaItem) => {\n    if (!client || !mediaItem.message.media) return;\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Preparing download for ${mediaItem.filename}...`, type: 'loading' });\n      \n      // Get file reference instead of buffer\n      const file = await client.downloadMedia(mediaItem.message.media, {\n        workers: 4,\n      }, false);\n      \n      // Get direct download link\n      const fileUrl = await client.getDownloadLink(file);\n      \n      // Create hidden anchor tag\n      const a = document.createElement('a');\n      a.href = fileUrl;\n      a.download = mediaItem.filename;\n      a.style.display = 'none';\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      \n      setAuthStatus({ \n        text: 'Download started in browser. Check your downloads folder.', \n        type: 'success' \n      });\n    } catch (err) {\n      // Fallback to buffer method if direct download fails\n      await downloadThroughApp(mediaItem);\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const downloadThroughApp = async (mediaItem) => {\n    try {\n      setAuthStatus({ text: `Downloading ${mediaItem.filename}...`, type: 'loading' });\n      setProgress(0);\n\n      const buffer = await client.downloadMedia(mediaItem.message.media, {\n        progressCallback: (received, total) => {\n          const percentage = Math.round((received / total) * 100);\n          setProgress(percentage);\n        },\n      });\n\n      const blob = new Blob([buffer]);\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = mediaItem.filename;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      setTimeout(() => URL.revokeObjectURL(url), 100);\n\n      setAuthStatus({ text: `${mediaItem.filename} downloaded!`, type: 'success' });\n    } catch (err) {\n      setAuthStatus({ text: `Download failed: ${err.message}`, type: 'error' });\n    } finally {\n      setProgress(0);\n    }\n  };\n\n  const downloadFile = async (mediaItem) => {\n    try {\n      await generateDirectDownloadLink(mediaItem);\n    } catch {\n      await downloadThroughApp(mediaItem);\n    }\n  };\n\n  const downloadSelected = async () => {\n    if (selectedItems.size === 0) {\n      setAuthStatus({ text: 'Please select files to download', type: 'error' });\n      return;\n    }\n\n    try {\n      setIsDownloading(true);\n      setAuthStatus({ text: `Preparing ${selectedItems.size} downloads...`, type: 'loading' });\n      \n      for (const id of selectedItems) {\n        const item = mediaItems.find(m => m.id === id);\n        if (item) {\n          await downloadFile(item);\n          await new Promise(resolve => setTimeout(resolve, 500));\n        }\n      }\n      \n      setAuthStatus({ text: `Started ${selectedItems.size} downloads!`, type: 'success' });\n    } catch (err) {\n      setAuthStatus({ text: `Batch download failed: ${err.message}`, type: 'error' });\n    } finally {\n      setIsDownloading(false);\n    }\n  };\n\n  const toggleItemSelection = (id) => {\n    const newSelected = new Set(selectedItems);\n    if (newSelected.has(id)) {\n      newSelected.delete(id);\n    } else {\n      newSelected.add(id);\n    }\n    setSelectedItems(newSelected);\n  };\n\n  const selectAllItems = () => {\n    if (selectedItems.size === mediaItems.length) {\n      setSelectedItems(new Set());\n    } else {\n      setSelectedItems(new Set(mediaItems.map(item => item.id)));\n    }\n  };\n\n  const formatFileSize = (bytes) => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const disconnect = async () => {\n    if (client) {\n      await client.disconnect();\n    }\n    localStorage.removeItem('telegramSession');\n    setClient(null);\n    setTab('auth');\n    setAuthStatus({ text: 'Disconnected', type: 'info' });\n    setMediaItems([]);\n    setSelectedItems(new Set());\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"app-header\">\n        <h1>Telegram Media Downloader</h1>\n        {client && (\n          <button onClick={disconnect} className=\"disconnect-btn\">\n            Disconnect\n          </button>\n        )}\n      </header>\n\n      <div className=\"tabs\">\n        <button\n          onClick={() => setTab('auth')}\n          className={`tab ${tab === 'auth' ? 'active' : ''}`}\n        >\n          Authentication\n        </button>\n        <button\n          onClick={() => setTab('download')}\n          className={`tab ${tab === 'download' ? 'active' : ''}`}\n          disabled={!client}\n        >\n          Download Media\n        </button>\n        <button\n          onClick={() => setTab('about')}\n          className={`tab ${tab === 'about' ? 'active' : ''}`}\n        >\n          About\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {tab === 'auth' && (\n          <div className=\"auth-container\">\n            <h2>Telegram Login</h2>\n            <div className=\"input-group\">\n              <label htmlFor=\"apiId\">API ID</label>\n              <input\n                id=\"apiId\"\n                placeholder=\"API ID (from my.telegram.org)\"\n                value={apiId}\n                onChange={(e) => setApiId(e.target.value.trim())}\n                type=\"text\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"apiHash\">API Hash</label>\n              <input\n                id=\"apiHash\"\n                placeholder=\"API Hash\"\n                value={apiHash}\n                onChange={(e) => setApiHash(e.target.value.trim())}\n                type=\"password\"\n              />\n            </div>\n            <div className=\"input-group\">\n              <label htmlFor=\"phone\">Phone Number</label>\n              <input\n                id=\"phone\"\n                placeholder=\"Phone (+1234567890)\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value.trim())}\n                type=\"tel\"\n              />\n            </div>\n            <button onClick={connect} className=\"connect-btn\" disabled={isWaitingForCode}>\n              {isWaitingForCode ? 'Waiting for code...' : 'Connect to Telegram'}\n            </button>\n            {isWaitingForCode && (\n              <div className=\"verification-box\">\n                <div className=\"input-group\">\n                  <label htmlFor=\"code\">Verification Code</label>\n                  <input\n                    id=\"code\"\n                    placeholder=\"Verification Code\"\n                    value={code}\n                    onChange={(e) => setCode(e.target.value.trim())}\n                    type=\"text\"\n                    autoFocus\n                  />\n                </div>\n                <button\n                  onClick={verifyCode}\n                  className=\"verify-btn\"\n                  disabled={!code.trim()}\n                >\n                  Verify Code\n                </button>\n              </div>\n            )}\n            {authStatus.text && (\n              <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n            )}\n          </div>\n        )}\n\n        {tab === 'download' && client && (\n          <div className=\"download-container\">\n            <h2>Download Media</h2>\n            <div className=\"search-container\">\n              <div className=\"input-group\">\n                <label htmlFor=\"chatInput\">Chat ID or @username</label>\n                <input\n                  id=\"chatInput\"\n                  placeholder=\"Chat ID or @username\"\n                  value={chatInput}\n                  onChange={(e) => setChatInput(e.target.value)}\n                  type=\"text\"\n                />\n              </div>\n              <button\n                onClick={fetchMedia}\n                className=\"fetch-btn\"\n                disabled={progress > 0 && progress < 100}\n              >\n                {progress > 0 && progress < 100 ? 'Fetching...' : 'Fetch Media'}\n              </button>\n            </div>\n            \n            {mediaItems.length > 0 && (\n              <div className=\"media-actions\">\n                <button\n                  onClick={selectAllItems}\n                  className=\"select-all-btn\"\n                >\n                  {selectedItems.size === mediaItems.length ? 'Deselect All' : 'Select All'}\n                </button>\n                <button\n                  onClick={downloadSelected}\n                  className=\"download-selected-btn\"\n                  disabled={selectedItems.size === 0 || isDownloading}\n                >\n                  Download Selected ({selectedItems.size})\n                </button>\n              </div>\n            )}\n            \n            <div className=\"media-grid\">\n              {mediaItems.length > 0 ? (\n                mediaItems.map((item) => (\n                  <div \n                    key={item.id} \n                    className={`media-item ${selectedItems.has(item.id) ? 'selected' : ''}`}\n                    onClick={() => toggleItemSelection(item.id)}\n                  >\n                    <div className=\"media-preview\">\n                      {item.type.includes('image') ? '📷' : \n                       item.type.includes('video') ? '🎥' : '📄'}\n                    </div>\n                    <div className=\"media-info\">\n                      <span className=\"filename\" title={item.filename}>{item.filename}</span>\n                      <span className=\"file-size\">{formatFileSize(item.size)}</span>\n                      <span className=\"file-date\">{item.date}</span>\n                    </div>\n                    <button\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        downloadFile(item);\n                      }}\n                      className=\"download-btn\"\n                      disabled={isDownloading}\n                    >\n                      Download\n                    </button>\n                  </div>\n                ))\n              ) : (\n                <div className=\"empty-state\">\n                  {progress > 0 && progress < 100\n                    ? 'Loading media...'\n                    : 'No media found. Enter a chat ID and click \"Fetch Media\"'}\n                </div>\n              )}\n            </div>\n            {progress > 0 && (\n              <div className=\"progress-container\">\n                <div className=\"progress-bar\" style={{ width: `${progress}%` }}>\n                  {progress}%\n                </div>\n              </div>\n            )}\n            {authStatus.text && (\n              <div className={`status ${authStatus.type}`}>{authStatus.text}</div>\n            )}\n          </div>\n        )}\n\n        {tab === 'about' && (\n          <div className=\"about-container\">\n            <h2>About This App</h2>\n            <p>This application allows you to download media from Telegram chats.</p>\n            <h3>How to use:</h3>\n            <ol>\n              <li>Get your API ID and Hash from <a href=\"https://my.telegram.org\" target=\"_blank\" rel=\"noopener noreferrer\">my.telegram.org</a></li>\n              <li>Enter your credentials in the Authentication tab</li>\n              <li>After connecting, go to the Download Media tab</li>\n              <li>Enter a chat ID or username to fetch media</li>\n              <li>Select and download the files you want</li>\n            </ol>\n            <div className=\"disclaimer\">\n              <strong>Note:</strong> This app runs entirely in your browser. Your credentials are not stored or sent to any server.\n              All data remains on your device.\n            </div>\n            <div className=\"version-info\">\n              Version 1.1.0 | Using Telegram Client API\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}